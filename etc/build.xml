<?xml version="1.0" encoding="utf-8"?>

<project name="icinga-web" default="hello" basedir="..">
	
	<!-- Default tstamp properties -->
	<tstamp />
	
	<property environment="env"/>
	<property name="package" value="${phing.project.name}" override="true" />
	<property name="srcdir" value="${project.basedir}" override="true" />
	<property name="builddir" value="${srcdir}/.build" override="false" />
	
	<!-- Load our default property file -->
	<property name="properties" value="etc/build.properties" override="false" />
	<property file="${properties}" />
	
	<target name="hello">
		<echo msg="Welcome to the icinga-web build system" />
		<echo msg="Project: ${package}" />
		<echo msg="Srcdir: ${srcdir}" />
		<echo msg="${builddir}"/>
	</target>
	
	<target name="prepare">

		<mkdir dir="${builddir}" />
	</target>
	
	<target name="db-prepare" depends="prepare">
		
		<property name="db.base" value="${srcdir}/etc/database" />
		<property name="dbUpdateFiles" value="${db.base}/migrations/"/>
		<property name="dbInitFile" value="${db.base}/dbInit.tar.gz"/>
		<property name="dbMigrations" value="${db.base}/migrations/"/>
	</target>

	<target name="db-create" depends="db-prepare" >
		<exec
			command="${db.deployer.call_global} --migrationStore ${dbMigrations} --importDB --createDB --target ${dbInitFile}"
			dir="${builddir}"
			passthru="true"
			checkreturn="false" 
			/>
	</target>

	<target name="db-purge-userprefs" depends="db-prepare">
		
		<property name="db.sql.truncateprefs" value="truncate table ${db.name}.nsm_user_preference" />
		
		<exec
			command="${db.mysql.call_global} -e '${db.sql.truncateprefs}'"
			dir="${builddir}"
			passthru="true"
			checkreturn="false" />
		
	</target>
	
	<target name="db-drop" >
		
		<input propertyname="db.sql.dropchoice" promptChar="?" validArgs="no,DROPMYDATA">Really drop the database</input>

		<if>
			<equals arg1="${db.sql.dropchoice}" arg2="DROPMYDATA" />
			<then>
				<exec
					command="${db.deployer.call_global} --dropDB"
					dir="${builddir}"
					passthru="true"
					checkreturn="false" />
				
			</then>
			
			<else>
				<echo>Yes, a really educated decision to keep the data ;-)</echo>
			</else>
		</if>
	</target>
	
	<target name="db-upgrade" depends="db-prepare">
		<exec
		command="${db.deployer.call_global} --migrationStore ${dbMigrations} --update --ignoreErrors"
		dir="${builddir}"
		passthru="true"
		checkreturn="false" />
	</target>

	<target name="db-downgrade" depends="db-prepare" >
		<exec
			command="${db.deployer.call_global} --migrationStore ${dbMigrations} --undo"
			dir="${builddir}"
			passthru="true"
			checkreturn="false" />
	</target>
	
	<target name="db-initialize">
		<phingcall target="db-create" />
	</target>
	
	<target name="db-deinitialize">
		<phingcall target="db-drop" />	
	</target>
	
	<target name="testdeps" depends="prepare">
		<property name="build.testdeps" value="${srcdir}/bin/testdeps.php" />
		<exec
			command="${php.bin} ${build.testdeps}"
			dir="${builddir}"
			passthru="true" 
			checkreturn="true" />
	</target>
	
	<target name="scheduler-install">
		<input propertyname="USER_Icinga" promptChar="?" defaultValue="icinga">Name of icinga-user</input>

		<copy file="etc/scheduler/icingaCron" tofile="/etc/cron.d/icingaCron">
			<filterchain>
				<replacetokens begintoken="%%" endtoken="%%">
					<token key="USER" value="${USER_Icinga}" />
					<token key="PATH" value="${PATH_Icinga}" />				
				</replacetokens>
			</filterchain>
		</copy>
		<mkdir dir="/var/log/icingaCron" />
		<chown file="/var/log/icingaCron" user="${USER_Icinga}" />
	</target>
	
	<target name="scheduler-remove">
		<delete file="/etc/cron.d/icingaCron"/>
	</target>
</project>
