<?php

/**
 * BaseNsmUser
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $user_id
 * @property integer $user_account
 * @property string $user_name
 * @property string $user_lastname
 * @property string $user_firstname
 * @property string $user_password
 * @property string $user_salt
 * @property string $user_email
 * @property integer $user_disabled
 * @property timestamp $user_created
 * @property timestamp $user_modified
 * @property Doctrine_Collection $NsmPrincipal
 * @property Doctrine_Collection $NsmUserPreference
 * @property Doctrine_Collection $NsmUserRole
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 6401 2009-09-24 16:12:04Z guilhermeblanco $
 */
abstract class BaseNsmUser extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('nsm_user');
        $this->hasColumn('user_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'unsigned' => 0,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('user_account', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'unsigned' => 0,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
        	 'default' => 0
       
             ));
        $this->hasColumn('user_name', 'string', 18, array(
             'type' => 'string',
             'length' => 18,
             'fixed' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('user_lastname', 'string', 40, array(
             'type' => 'string',
             'length' => 40,
             'fixed' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('user_firstname', 'string', 40, array(
             'type' => 'string',
             'length' => 40,
             'fixed' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('user_password', 'string', 64, array(
             'type' => 'string',
             'length' => 64,
             'fixed' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
        	 'default' => 'login'
             ));
        $this->hasColumn('user_salt', 'string', 64, array(
             'type' => 'string',
             'length' => 64,
             'fixed' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
    		 'default' => mt_rand(0,100)
             ));
        $this->hasColumn('user_email', 'string', 40, array(
             'type' => 'string',
             'length' => 40,
             'fixed' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('user_disabled', 'integer', 1, array(
             'type' => 'integer',
             'length' => 1,
             'unsigned' => 0,
             'primary' => false,
             'default' => '1',
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('user_created', 'timestamp', null, array(
             'type' => 'timestamp',
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('user_modified', 'timestamp', null, array(
             'type' => 'timestamp',
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
    }
    
    public function setUp()
    {
        parent::setUp();
   		$this->hasOne('NsmPrincipal', array(
             'local' => 'user_id',
             'foreign' => 'principal_user_id'));

        $this->hasMany('NsmUserPreference', array(
             'local' => 'user_id',
             'foreign' => 'upref_user_id'));

        $this->hasMany('NsmUserRole', array(
             'local' => 'user_id',
             'foreign' => 'usro_user_id'));
    }
}