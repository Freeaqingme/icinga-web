<?xml version="1.0" encoding="UTF-8"?>
<configurations xmlns="http://agavi.org/agavi/1.0/config">
	
	<configuration>
		
		<output_types default="html">
			
			<output_type name="html">
				
				<renderers default="php">
					<renderer name="php" class="AgaviPhpRenderer">
						<parameter name="assigns">
							<parameter name="routing">ro</parameter>
							<parameter name="request">rq</parameter>
							<parameter name="controller">ct</parameter>
							<parameter name="user">us</parameter>
							<parameter name="translation_manager">tm</parameter>
							<parameter name="request_data">rd</parameter>
						</parameter>
						<!-- this changes the name of the variable with all template attributes from the default $template to $t -->
						<parameter name="var_name">t</parameter>
					</renderer>
				</renderers>
				
				<layouts default="ICINGAWireFrame">
				
					<!-- standard layout with a content and a decorator layer -->
					<layout name="ICINGAWireFrame">
						<!-- content layer without further params. this means the standard template is used, i.e. the one with the same name as the current view -->
						<layer name="content" />
						<!-- decorator layer with the HTML skeleton, navigation etc; set to a specific template here -->
						<layer name="decorator">
						
							<parameter name="directory">%core.template_dir%</parameter>
							<parameter name="template">ICINGAWireFrameMaster</parameter>
							
							<!-- Headerdata -->
							<slot name="additional_header_data" module="AppKit" action="Widgets.AddHeaderData" />
							
							<!-- Navigation -->
							<slot name="navigation_top" module="AppKit" action="Widgets.ShowNavigation">
								<parameter name="type">top</parameter>
							</slot>
							
							<slot name="navigation_left" module="AppKit" action="Widgets.ShowNavigation">
								<parameter name="type">left</parameter>
							</slot>
							
							<!-- Errors -->
							<slot name="error_frame" module="AppKit" action="Widgets.ShowErrors">
								<parameter name="type">7</parameter>
							</slot>
							
							<!-- Footer -->
							<slot name="footer" module="AppKit" action="Widgets.ShowFooter">
							</slot>
						</layer>
					</layout>
					
					<!-- special layout for slots that only has a content layer to prevent the obvious infinite loop that would otherwise occur if the decorator layer has slots assigned in the layout; this is loaded automatically by ProjectBaseView::setupHtml() in case the current container is run as a slot -->
					<layout name="simple">
						<layer name="content" />
					</layout>
					
					<!-- Slot layout -->
					<layout name="slot">
						<layer name="content" />
					</layout>
				</layouts>
				
				<parameter name="http_headers">
					<parameter name="Content-Type">text/html; charset=UTF-8</parameter>
				</parameter>
				
			</output_type>
			
			<output_type name="image">
				<parameter name="http_headers">
					<!-- Remove some unwanted http headers -->
					<parameter name="Pragma"></parameter>
					<parameter name="Set-Cookie"></parameter>
				</parameter>
			</output_type>
			
			<output_type name="xml">
				<parameter name="http_headers">
					<parameter name="Content-Type">text/xml; charset=UTF-8</parameter>
				</parameter>
			</output_type>
			
			<output_type name="json">
				<parameter name="http_headers">
					<parameter name="Content-Type">text/x-json; charset=UTF-8</parameter>
					<!-- <parameter name="Content-Type">text/plain; charset=UTF-8</parameter> -->
				</parameter>
			</output_type>
			
			<output_type name="ajax">
				<renderers default="php">
					<renderer name="php" class="AgaviPhpRenderer">
						<parameter name="assigns">
							<parameter name="routing">ro</parameter>
							<parameter name="request">rq</parameter>
							<parameter name="controller">ct</parameter>
							<parameter name="user">us</parameter>
							<parameter name="translation_manager">tm</parameter>
							<parameter name="request_data">rd</parameter>
						</parameter>
						<!-- this changes the name of the variable with all template attributes from the default $template to $t -->
						<parameter name="var_name">t</parameter>
					</renderer>
				</renderers>
			
				<layouts default="simple">
					<layout name="simple">
						<layer name="content" />
					</layout>
				</layouts>
			</output_type>
			
		</output_types>
		
	</configuration>
	
	<configuration environment="production.*">
		
		<output_types default="html">
			
			<!-- use a different exception template in production envs -->
			<!-- others are defined in settings.xml -->
			<output_type name="html" exception_template="%core.template_dir%/exceptions/web-html.php" />
			
		</output_types>
		
	</configuration>
	
</configurations>
