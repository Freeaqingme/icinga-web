diff --git a/app/ApiOccurences b/app/ApiOccurences
deleted file mode 100644
index ecf3a5b..0000000
--- a/app/ApiOccurences
+++ /dev/null
@@ -1,345 +0,0 @@
-./data/log/debug-2011-06-25.log:[Sat Jun 25 14:15:06 2011] [fatal] Uncaught AppKitPHPError: PHP Error Undefined offset: 1 (/usr/local/icinga/share/icinga-api/objects/search/IcingaApiSearchIdo.php:322) (/usr/local/icinga-web/app/modules/AppKit/lib/logging/AppKitExceptionHandler.class.php:20)
-./data/log/debug-2011-06-20.log:[Mon Jun 20 08:10:29 2011] [fatal] Uncaught AppKitPHPError: PHP Error Undefined variable: hosts (/usr/local/icinga-web/tests/phpunit/tests/api/apiprovider/IcingaApiDatastoreTest.php:36) (/usr/local/icinga-web/app/modules/AppKit/lib/logging/AppKitExceptionHandler.class.php:20)
-./data/log/debug-2011-06-20.log:[Mon Jun 20 08:10:43 2011] [fatal] Uncaught AppKitPHPError: PHP Error Undefined index: services (/usr/local/icinga-web/tests/phpunit/tests/api/apiprovider/IcingaApiDatastoreTest.php:36) (/usr/local/icinga-web/app/modules/AppKit/lib/logging/AppKitExceptionHandler.class.php:20)
-./data/log/debug-2011-06-20.log:[Mon Jun 20 08:10:55 2011] [fatal] Uncaught AppKitPHPError: PHP Error Undefined index: services (/usr/local/icinga-web/tests/phpunit/tests/api/apiprovider/IcingaApiDatastoreTest.php:38) (/usr/local/icinga-web/app/modules/AppKit/lib/logging/AppKitExceptionHandler.class.php:20)
-./data/log/debug-2011-06-20.log:[Mon Jun 20 08:11:42 2011] [fatal] Uncaught AppKitPHPError: PHP Error Undefined index: services (/usr/local/icinga-web/tests/phpunit/tests/api/apiprovider/IcingaApiDatastoreTest.php:37) (/usr/local/icinga-web/app/modules/AppKit/lib/logging/AppKitExceptionHandler.class.php:20)
-./data/log/debug-2011-06-20.log:[Mon Jun 20 08:12:13 2011] [fatal] Uncaught AppKitPHPError: PHP Error Undefined index: services (/usr/local/icinga-web/tests/phpunit/tests/api/apiprovider/IcingaApiDatastoreTest.php:37) (/usr/local/icinga-web/app/modules/AppKit/lib/logging/AppKitExceptionHandler.class.php:20)
-./data/log/debug-2011-06-20.log:[Mon Jun 20 08:12:44 2011] [fatal] Uncaught AppKitPHPError: PHP Error Undefined index: services (/usr/local/icinga-web/tests/phpunit/tests/api/apiprovider/IcingaApiDatastoreTest.php:37) (/usr/local/icinga-web/app/modules/AppKit/lib/logging/AppKitExceptionHandler.class.php:20)
-./data/log/debug-2011-06-20.log:[Mon Jun 20 08:13:28 2011] [fatal] Uncaught AppKitPHPError: PHP Error Undefined index: services (/usr/local/icinga-web/tests/phpunit/tests/api/apiprovider/IcingaApiDatastoreTest.php:37) (/usr/local/icinga-web/app/modules/AppKit/lib/logging/AppKitExceptionHandler.class.php:20)
-./data/log/debug-2011-06-20.log:[Mon Jun 20 08:14:10 2011] [fatal] Uncaught AppKitPHPError: PHP Error Undefined index: services (/usr/local/icinga-web/tests/phpunit/tests/api/apiprovider/IcingaApiDatastoreTest.php:37) (/usr/local/icinga-web/app/modules/AppKit/lib/logging/AppKitExceptionHandler.class.php:20)
-./data/log/icinga-web-2011-06-28.log:[Tue Jun 28 08:57:51 2011] [fatal] Uncaught AppKitPHPError: PHP Error Undefined variable: resultTypes (/usr/local/icinga-web/app/modules/Api/lib/datastore/IcingaApiDataStoreModel.class.php:33) (/usr/local/icinga-web/app/modules/AppKit/lib/logging/AppKitExceptionHandler.class.php:20)
-./data/log/icinga-web-2011-06-28.log:[Tue Jun 28 16:49:40 2011] [fatal] Uncaught AppKitPHPError: PHP Error Undefined index: services (/usr/local/icinga-web/tests/phpunit/tests/api/apiprovider/IcingaApiDatastoreTest.php:36) (/usr/local/icinga-web/app/modules/AppKit/lib/logging/AppKitExceptionHandler.class.php:20)
-./data/log/icinga-web-2011-06-28.log:[Tue Jun 28 16:51:21 2011] [fatal] Uncaught AppKitPHPError: PHP Error Undefined index: services (/usr/local/icinga-web/tests/phpunit/tests/api/apiprovider/IcingaApiDatastoreTest.php:37) (/usr/local/icinga-web/app/modules/AppKit/lib/logging/AppKitExceptionHandler.class.php:20)
-./data/log/icinga-web-2011-06-28.log:[Tue Jun 28 16:53:19 2011] [fatal] Uncaught AppKitPHPError: PHP Error Undefined offset: 1 (/usr/local/icinga-web/tests/phpunit/tests/api/apiprovider/IcingaApiDatastoreTest.php:104) (/usr/local/icinga-web/app/modules/AppKit/lib/logging/AppKitExceptionHandler.class.php:20)
-./data/log/icinga-web-2011-06-27.log:[Mon Jun 27 09:14:22 2011] [fatal] Uncaught AppKitPHPError: PHP Error Undefined index: services (/usr/local/icinga/share/icinga-api/objects/search/IcingaApiSearchIdo.php:490) (/usr/local/icinga-web/app/modules/AppKit/lib/logging/AppKitExceptionHandler.class.php:20)
-./data/log/icinga-web-2011-06-27.log:[Mon Jun 27 09:14:24 2011] [fatal] Uncaught AppKitPHPError: PHP Error Undefined index: services (/usr/local/icinga/share/icinga-api/objects/search/IcingaApiSearchIdo.php:490) (/usr/local/icinga-web/app/modules/AppKit/lib/logging/AppKitExceptionHandler.class.php:20)
-./data/log/icinga-web-2011-06-27.log:[Mon Jun 27 15:37:14 2011] [fatal] Uncaught AppKitPHPError: PHP Error Argument 3 passed to API_Store_DataStoreResultModel::parseInputFromRecord() must be an instance of IcingaApiDataStoreModel, none given, called in /usr/local/icinga-web/app/modules/Api/models/Store/DataStoreResultModel.class.php on line 15 and defined (/usr/local/icinga-web/app/modules/Api/models/Store/DataStoreResultModel.class.php:30) (/usr/local/icinga-web/app/modules/AppKit/lib/logging/AppKitExceptionHandler.class.php:20)
-./data/log/icinga-web-2011-06-25.log:[Sat Jun 25 14:15:06 2011] [fatal] Uncaught AppKitPHPError: PHP Error Undefined offset: 1 (/usr/local/icinga/share/icinga-api/objects/search/IcingaApiSearchIdo.php:322) (/usr/local/icinga-web/app/modules/AppKit/lib/logging/AppKitExceptionHandler.class.php:20)
-./data/log/debug-2011-06-27.log:[Mon Jun 27 09:14:22 2011] [fatal] Uncaught AppKitPHPError: PHP Error Undefined index: services (/usr/local/icinga/share/icinga-api/objects/search/IcingaApiSearchIdo.php:490) (/usr/local/icinga-web/app/modules/AppKit/lib/logging/AppKitExceptionHandler.class.php:20)
-./data/log/debug-2011-06-27.log:[Mon Jun 27 09:14:24 2011] [fatal] Uncaught AppKitPHPError: PHP Error Undefined index: services (/usr/local/icinga/share/icinga-api/objects/search/IcingaApiSearchIdo.php:490) (/usr/local/icinga-web/app/modules/AppKit/lib/logging/AppKitExceptionHandler.class.php:20)
-./data/log/debug-2011-06-27.log:[Mon Jun 27 15:37:14 2011] [fatal] Uncaught AppKitPHPError: PHP Error Argument 3 passed to API_Store_DataStoreResultModel::parseInputFromRecord() must be an instance of IcingaApiDataStoreModel, none given, called in /usr/local/icinga-web/app/modules/Api/models/Store/DataStoreResultModel.class.php on line 15 and defined (/usr/local/icinga-web/app/modules/Api/models/Store/DataStoreResultModel.class.php:30) (/usr/local/icinga-web/app/modules/AppKit/lib/logging/AppKitExceptionHandler.class.php:20)
-./data/log/debug-2011-06-28.log:[Tue Jun 28 08:57:51 2011] [fatal] Uncaught AppKitPHPError: PHP Error Undefined variable: resultTypes (/usr/local/icinga-web/app/modules/Api/lib/datastore/IcingaApiDataStoreModel.class.php:33) (/usr/local/icinga-web/app/modules/AppKit/lib/logging/AppKitExceptionHandler.class.php:20)
-./data/log/debug-2011-06-28.log:[Tue Jun 28 16:49:40 2011] [fatal] Uncaught AppKitPHPError: PHP Error Undefined index: services (/usr/local/icinga-web/tests/phpunit/tests/api/apiprovider/IcingaApiDatastoreTest.php:36) (/usr/local/icinga-web/app/modules/AppKit/lib/logging/AppKitExceptionHandler.class.php:20)
-./data/log/debug-2011-06-28.log:[Tue Jun 28 16:51:21 2011] [fatal] Uncaught AppKitPHPError: PHP Error Undefined index: services (/usr/local/icinga-web/tests/phpunit/tests/api/apiprovider/IcingaApiDatastoreTest.php:37) (/usr/local/icinga-web/app/modules/AppKit/lib/logging/AppKitExceptionHandler.class.php:20)
-./data/log/debug-2011-06-28.log:[Tue Jun 28 16:53:19 2011] [fatal] Uncaught AppKitPHPError: PHP Error Undefined offset: 1 (/usr/local/icinga-web/tests/phpunit/tests/api/apiprovider/IcingaApiDatastoreTest.php:104) (/usr/local/icinga-web/app/modules/AppKit/lib/logging/AppKitExceptionHandler.class.php:20)
-./data/log/icinga-web-2011-06-20.log:[Mon Jun 20 08:10:29 2011] [fatal] Uncaught AppKitPHPError: PHP Error Undefined variable: hosts (/usr/local/icinga-web/tests/phpunit/tests/api/apiprovider/IcingaApiDatastoreTest.php:36) (/usr/local/icinga-web/app/modules/AppKit/lib/logging/AppKitExceptionHandler.class.php:20)
-./data/log/icinga-web-2011-06-20.log:[Mon Jun 20 08:10:43 2011] [fatal] Uncaught AppKitPHPError: PHP Error Undefined index: services (/usr/local/icinga-web/tests/phpunit/tests/api/apiprovider/IcingaApiDatastoreTest.php:36) (/usr/local/icinga-web/app/modules/AppKit/lib/logging/AppKitExceptionHandler.class.php:20)
-./data/log/icinga-web-2011-06-20.log:[Mon Jun 20 08:10:55 2011] [fatal] Uncaught AppKitPHPError: PHP Error Undefined index: services (/usr/local/icinga-web/tests/phpunit/tests/api/apiprovider/IcingaApiDatastoreTest.php:38) (/usr/local/icinga-web/app/modules/AppKit/lib/logging/AppKitExceptionHandler.class.php:20)
-./data/log/icinga-web-2011-06-20.log:[Mon Jun 20 08:11:42 2011] [fatal] Uncaught AppKitPHPError: PHP Error Undefined index: services (/usr/local/icinga-web/tests/phpunit/tests/api/apiprovider/IcingaApiDatastoreTest.php:37) (/usr/local/icinga-web/app/modules/AppKit/lib/logging/AppKitExceptionHandler.class.php:20)
-./data/log/icinga-web-2011-06-20.log:[Mon Jun 20 08:12:13 2011] [fatal] Uncaught AppKitPHPError: PHP Error Undefined index: services (/usr/local/icinga-web/tests/phpunit/tests/api/apiprovider/IcingaApiDatastoreTest.php:37) (/usr/local/icinga-web/app/modules/AppKit/lib/logging/AppKitExceptionHandler.class.php:20)
-./data/log/icinga-web-2011-06-20.log:[Mon Jun 20 08:12:44 2011] [fatal] Uncaught AppKitPHPError: PHP Error Undefined index: services (/usr/local/icinga-web/tests/phpunit/tests/api/apiprovider/IcingaApiDatastoreTest.php:37) (/usr/local/icinga-web/app/modules/AppKit/lib/logging/AppKitExceptionHandler.class.php:20)
-./data/log/icinga-web-2011-06-20.log:[Mon Jun 20 08:13:28 2011] [fatal] Uncaught AppKitPHPError: PHP Error Undefined index: services (/usr/local/icinga-web/tests/phpunit/tests/api/apiprovider/IcingaApiDatastoreTest.php:37) (/usr/local/icinga-web/app/modules/AppKit/lib/logging/AppKitExceptionHandler.class.php:20)
-./data/log/icinga-web-2011-06-20.log:[Mon Jun 20 08:14:10 2011] [fatal] Uncaught AppKitPHPError: PHP Error Undefined index: services (/usr/local/icinga-web/tests/phpunit/tests/api/apiprovider/IcingaApiDatastoreTest.php:37) (/usr/local/icinga-web/app/modules/AppKit/lib/logging/AppKitExceptionHandler.class.php:20)
-./modules/Api/config/autoload.xml:		<autoload name="IcingaApiBaseAction">%core.module_dir%/Api/lib/action/IcingaApiBaseAction.class.php</autoload>
-./modules/Api/config/autoload.xml:		<autoload name="IcingaApiBaseModel">%core.module_dir%/Api/lib/model/IcingaApiBaseModel.class.php</autoload>
-./modules/Api/config/autoload.xml:		<autoload name="IcingaApiBaseView">%core.module_dir%/Api/lib/view/IcingaApiBaseView.class.php</autoload>		
-./modules/Api/config/autoload.xml:        <autoload name="IcingaApiDataStoreModel">%core.module_dir%/Api/lib/datastore/IcingaApiDataStoreModel.class.php</autoload> 
-./modules/Api/models/DBALMetaManagerModel.class.php:class Api_DBALMetaManagerModel extends IcingaApiBaseModel {
-Übereinstimmungen in Binärdatei ./modules/Api/models/Store/.HostStoreModel.class.php.swn.
-./modules/Api/models/Store/DataStoreResultModel.class.php:    public function setModel(IcingaApiDataStoreModel $model) {
-Übereinstimmungen in Binärdatei ./modules/Api/models/Store/.HostStoreModel.class.php.swp.
-Übereinstimmungen in Binärdatei ./modules/Api/models/Store/.HostStoreModel.class.php.swo.
-./modules/Api/models/Store/HostStoreModel.class.php:class Api_Store_HostStoreModel extends IcingaApiDataStoreModel {
-./modules/Api/models/Console/ConsoleInterfaceModel.class.php:class Api_Console_ConsoleInterfaceModel extends IcingaApiBaseModel {
-./modules/Api/models/Console/ConsoleCommandModel.class.php:class Api_Console_ConsoleCommandModel extends IcingaApiBaseModel {
-./modules/Api/actions/ApiSearchAction.class.php:class Api_ApiSearchAction extends IcingaApiBaseAction {
-./modules/Api/actions/ApiSearchAction.class.php:        $search->setResultType(IcingaApiSearch::RESULT_ARRAY);
-./modules/Api/actions/ApiSearchAction.class.php:            $search->setSearchType(IcingaApiSearch::SEARCH_TYPE_COUNT);
-./modules/Api/actions/ApiSearchAction.class.php:            $search->setResultType(IcingaApiSearch::RESULT_ARRAY);
-./modules/Api/actions/ApiSearchAction.class.php:    protected function addFilters(IcingaApiSearchIdo $search,AgaviRequestDataHolder $rd) {
-./modules/Api/actions/ApiSearchAction.class.php:    public function buildFiltersFromArray(IcingaApiSearchIdo $search, array $filterdef) {
-./modules/Api/actions/ApiSearchAction.class.php:    public function setGrouping(IcingaApiSearchIdo $search,AgaviRequestDataHolder $rd) {
-./modules/Api/actions/ApiSearchAction.class.php:    public function setOrder(IcingaApiSearchIdo $search,AgaviRequestDataHolder $rd) {
-./modules/Api/actions/ApiSearchAction.class.php:    public function setColumns(IcingaApiSearchIdo $search,AgaviRequestDataHolder $rd) {
-./modules/Api/actions/ApiSearchAction.class.php:        if ($search->getSearchType() == IcingaApiSearch::SEARCH_TYPE_COUNT) {
-./modules/Api/actions/ApiSearchAction.class.php:    public function setLimit(IcingaApiSearchIdo $search,AgaviRequestDataHolder $rd) {
-./modules/Api/actions/IcingaInstanceControllerAction.class.php:class Api_IcingaInstanceControllerAction extends IcingaApiBaseAction {
-./modules/Api/actions/Test/RequestTestAction.class.php:class Api_Test_RequestTestAction extends IcingaApiBaseAction {
-./modules/Api/actions/ApiDataStoreProviderAction.class.php:class Api_ApiDataStoreProviderAction extends IcingaApiBaseAction implements IAppKitDataStoreProviderAction, IDispatchableAction
-./modules/Api/actions/ApiDataStoreProviderAction.class.php:                model" => "Store.IcingaApiDataStore"
-./modules/Api/actions/ApiDataStoreProviderAction.class.php:                "model" => "Store.IcingaApiDataStore"
-./modules/Api/actions/ApiCommandAction.class.php:class Api_ApiCommandAction extends IcingaApiBaseAction {
-./modules/Api/actions/ApiCommandAction.class.php:        } catch (IcingaApiCommandException $e) {
-./modules/Api/actions/ApiCommandAction.class.php:            $cmd = IcingaApi::getCommandObject();
-./modules/Api/lib/action/IcingaApiBaseAction.class.php:class IcingaApiBaseAction extends IcingaBaseAction {
-./modules/Api/lib/model/IcingaApiBaseModel.class.php:class IcingaApiBaseModel extends IcingaBaseModel {
-./modules/Api/lib/model/ApiDataRequestBaseModel.class.php:class ApiDataRequestBaseModel extends IcingaApiBaseModel {
-./modules/Api/lib/classes/IcingaApiDoctrineRecord.class.php:abstract class IcingaApiDoctrineRecord extends Doctrine_Record {
-./modules/Api/lib/classes/IcingaApiDataAccessor.class.php:interface IcingaApiDataAccessor {
-./modules/Api/lib/classes/IcingaApiRequestHelper.class.php: * All methods must return a IcingaApiRequestDescriptor
-./modules/Api/lib/classes/IcingaApiRequestHelper.class.php:class IcingaApiRequestHelper {
-./modules/Api/lib/view/IcingaApiBaseView.class.php:class IcingaApiBaseView extends IcingaBaseView {
-./modules/Api/lib/datastore/IcingaApiDataStoreModel.class.php:class IcingaApiActionNotAvailableException extends AppKitException {};
-./modules/Api/lib/datastore/IcingaApiDataStoreModel.class.php:class IcingaApiDataStoreModel extends AbstractDataStoreModel {
-./modules/Api/lib/datastore/IcingaApiDataStoreModel.class.php:        throw new IcingaApiActionNotAvailableException("Can't update in api");
-./modules/Api/lib/datastore/IcingaApiDataStoreModel.class.php:        throw new IcingaApiActionNotAvailableException("Can't delete from api");
-./modules/Api/lib/datastore/IcingaApiDataStoreModel.class.php:        throw new IcingaApiActionNotAvailableException("Can't insert in api store");
-./modules/Api/views/IcingaInstanceControllerSuccessView.class.php:class Api_IcingaInstanceControllerSuccessView extends IcingaApiBaseView {
-./modules/Api/views/ApiSearchSuccessView.class.php:class Api_ApiSearchSuccessView extends IcingaApiBaseView {
-./modules/Api/views/Test/RequestTestSuccessView.class.php:class Api_Test_RequestTestSuccessView extends IcingaApiBaseView {
-./modules/Api/views/ApiDataStoreProviderSuccessView.class.php:class Api_ApiDataStoreProviderSuccessView extends IcingaApiBaseView
-./modules/Api/views/ApiCommandSuccessView.class.php:class Api_ApiCommandSuccessView extends IcingaApiBaseView {
-./modules/Api/views/ApiDataStoreProviderErrorView.class.php:class Api_ApiDataStoreProviderErrorView extends IcingaApiBaseView {
-./modules/Api/views/ApiCommandErrorView.class.php:class Api_ApiCommandSuccessView extends IcingaApiBaseView {
-./modules/Api/views/ApiSearchErrorView.class.php:class Api_ApiSearchErrorView extends IcingaApiBaseView {
-./modules/Cronks/models/System/MonitorPerformanceDataModel.class.php:                                  array(IcingaApi::TARGET_HOST, array(
-./modules/Cronks/models/System/MonitorPerformanceDataModel.class.php:                                  array(IcingaApi::TARGET_HOST_SERVICE, array(
-./modules/Cronks/models/System/MonitorPerformanceDataModel.class.php:                                      IcingaApi::TARGET_HOST,
-./modules/Cronks/models/System/MonitorPerformanceDataModel.class.php:                                      IcingaApi::SEARCH_TYPE_COUNT,
-./modules/Cronks/models/System/MonitorPerformanceDataModel.class.php:                                      IcingaApi::TARGET_HOST,
-./modules/Cronks/models/System/MonitorPerformanceDataModel.class.php:                                      IcingaApi::SEARCH_TYPE_COUNT,
-./modules/Cronks/models/System/MonitorPerformanceDataModel.class.php:                                      IcingaApi::TARGET_SERVICE,
-./modules/Cronks/models/System/MonitorPerformanceDataModel.class.php:                                      IcingaApi::SEARCH_TYPE_COUNT,
-./modules/Cronks/models/System/MonitorPerformanceDataModel.class.php:                                      IcingaApi::TARGET_SERVICE,
-./modules/Cronks/models/System/MonitorPerformanceDataModel.class.php:                                      IcingaApi::SEARCH_TYPE_COUNT,
-./modules/Cronks/models/System/MonitorPerformanceDataModel.class.php:                       ->setResultType(IcingaApi::RESULT_ARRAY)
-./modules/Cronks/models/System/MonitorPerformanceDataModel.class.php:            } catch (IcingaApiException $e) {
-./modules/Cronks/models/System/CommandSenderModel.class.php:        $cmd = IcingaApi::getCommandObject();
-./modules/Cronks/models/System/StaticContentTemplateModel.class.php:					        constant(isset($filter['match']) ? $filter['match'] : 'IcingaApi::MATCH_LIKE')
-./modules/Cronks/models/System/StaticContentTemplateModel.class.php:						if (!isset($f[2])) $f[2] = IcingaApi::MATCH_EXACT;
-./modules/Cronks/models/System/StaticContentTemplateModel.class.php:				->setResultType(IcingaApi::RESULT_ARRAY)
-./modules/Cronks/models/System/StaticContentTemplateModel.class.php://					        constant(isset($filter['match']) ? $filter['match'] : 'IcingaApi::MATCH_LIKE')
-./modules/Cronks/models/System/StaticContentTemplateModel.class.php://						if (!isset($f[2])) $f[2] = IcingaApi::MATCH_EXACT;
-./modules/Cronks/models/System/StatusMapModel.class.php:        $apiResHosts->setResultType(IcingaApi::RESULT_ARRAY)
-./modules/Cronks/models/System/StatusMapModel.class.php:        ->setSearchTarget(IcingaApi::TARGET_HOST)
-./modules/Cronks/models/System/StatusMapModel.class.php:        $apiResHostParents->setSearchTarget(IcingaApi::TARGET_HOST_PARENTS);
-./modules/Cronks/models/System/ObjectSearchResultModel.class.php:     * @var IcingaApiConnectionIdo
-./modules/Cronks/models/System/ObjectSearchResultModel.class.php:                               'target'		=> IcingaApi::TARGET_HOST,
-./modules/Cronks/models/System/ObjectSearchResultModel.class.php:                               'target'		=> IcingaApi::TARGET_SERVICE,
-./modules/Cronks/models/System/ObjectSearchResultModel.class.php:                               'target'		=> IcingaApi::TARGET_HOSTGROUP,
-./modules/Cronks/models/System/ObjectSearchResultModel.class.php:                               'target'		=> IcingaApi::TARGET_SERVICEGROUP,
-./modules/Cronks/models/System/ObjectSearchResultModel.class.php:                      ->setResultType(IcingaApi::RESULT_ARRAY)
-./modules/Cronks/models/System/ObjectSearchResultModel.class.php:            $search_group = $search->createFilterGroup(IcingaApi::SEARCH_OR);
-./modules/Cronks/models/System/ObjectSearchResultModel.class.php:                $search_group->addFilter($search->createFilter($search_field, $this->query, IcingaApi::MATCH_LIKE));
-./modules/Cronks/models/System/ObjectSearchResultModel.class.php:    private function resultToArray(IcingaApiResult &$res, array $fieldDef, $type) {
-./modules/Cronks/models/System/StatusOverallModel.class.php:                       IcingaApi::TARGET_HOST_STATUS_SUMMARY =>
-./modules/Cronks/models/System/StatusOverallModel.class.php:                       IcingaApi::TARGET_SERVICE_STATUS_SUMMARY =>
-./modules/Cronks/models/System/StatusOverallModel.class.php:    private function buildDataArray(IcingaApiSearch &$search, $type, array $states, array &$target,$stype) {
-./modules/Cronks/models/System/StatusOverallModel.class.php:        $data = $search->setResultType(IcingaApi::RESULT_ARRAY)->fetch()->getAll();
-./modules/Cronks/models/System/StatusOverallModel.class.php:        $result = $search->setResultType(IcingaApi::RESULT_ARRAY)->fetch()->getAll();
-./modules/Cronks/models/System/CommandInfoModel.class.php:     * @var IcingaApiCommandCollection
-./modules/Cronks/models/System/CommandInfoModel.class.php:        $this->command_collection = IcingaApi::getCommandCollection();
-./modules/Cronks/actions/System/ViewProc/SendCommandAction.class.php:        $IcingaApiCommand = $this->getContext()->getModel('Icinga.ApiContainer', 'Web');
-./modules/Cronks/actions/System/ViewProc/SendCommandAction.class.php:            if ($IcingaApiCommand->checkDispatcher() !== true) {
-./modules/Cronks/actions/System/ViewProc/SendCommandAction.class.php:                $this->log('SendCommandAction: IcingaApi dispatcher is not ready!', AgaviLogger::ERROR);
-./modules/Cronks/actions/System/ViewProc/SendCommandAction.class.php:                $IcingaApiCommand->dispatchCommandArray($coa);
-./modules/Cronks/actions/System/ViewProc/SendCommandAction.class.php:            } catch (IcingaApiCommandException $e) {
-./modules/Cronks/actions/System/ViewProc/SendCommandAction.class.php:                $errors = $IcingaApiCommand->getLastErrors();
-./modules/Cronks/lib/js/FilterHandler.js: * IcingaApiComboBox
-./modules/Cronks/lib/js/FilterHandler.js:Cronk.IcingaApiComboBox = Ext.extend(Ext.form.ComboBox, {
-./modules/Cronks/lib/js/FilterHandler.js:		Cronk.IcingaApiComboBox.superclass.constructor.call(this, cfg);
-./modules/Cronks/lib/js/FilterHandler.js:		return new Cronk.IcingaApiComboBox({
-./modules/Cronks/data/xml/to/icinga-tactical-overview-groupstat.xml:			<source_type>IcingaApi</source_type>
-./modules/Cronks/data/xml/to/icinga-tactical-overview-groupstat.xml:			<target>IcingaApi::TARGET_HOSTGROUP</target>
-./modules/Cronks/data/xml/to/icinga-tactical-overview-groupstat.xml:			<source_type>IcingaApi</source_type>
-./modules/Cronks/data/xml/to/icinga-tactical-overview-groupstat.xml:			<target>IcingaApi::TARGET_SERVICEGROUP</target>
-./modules/Cronks/data/xml/to/icinga-tactical-overview-groupstat.xml:			<source_type>IcingaApi</source_type>
-./modules/Cronks/data/xml/to/icinga-tactical-overview-groupstat.xml:			<target>IcingaApi::TARGET_HOST_STATUS_SUMMARY</target>
-./modules/Cronks/data/xml/to/icinga-tactical-overview-groupstat.xml:			<source_type>IcingaApi</source_type>
-./modules/Cronks/data/xml/to/icinga-tactical-overview-groupstat.xml:			<target>IcingaApi::TARGET_SERVICE_STATUS_SUMMARY</target>
-./modules/Cronks/data/xml/to/icinga-tactical-overview-presets.xml:			<source_type>IcingaApi</source_type>
-./modules/Cronks/data/xml/to/icinga-tactical-overview-presets.xml:			<target>IcingaApi::TARGET_SERVICE</target>
-./modules/Cronks/data/xml/to/icinga-tactical-overview-presets.xml:			<source_type>IcingaApi</source_type>
-./modules/Cronks/data/xml/to/icinga-tactical-overview-presets.xml:			<target>IcingaApi::TARGET_SERVICE</target>
-./modules/Cronks/data/xml/to/icinga-tactical-overview-presets.xml:			<source_type>IcingaApi</source_type>
-./modules/Cronks/data/xml/to/icinga-tactical-overview-presets.xml:			<target>IcingaApi::TARGET_HOST</target>
-./modules/Cronks/data/xml/to/icinga-tactical-overview-presets.xml:			<source_type>IcingaApi</source_type>
-./modules/Cronks/data/xml/to/icinga-tactical-overview-presets.xml:			<target>IcingaApi::TARGET_HOST</target>
-./modules/Cronks/data/xml/to/icinga-tactical-overview-presets.xml:			<source_type>IcingaApi</source_type>
-./modules/Cronks/data/xml/to/icinga-tactical-overview-presets.xml:			<target>IcingaApi::TARGET_HOST</target>
-./modules/Cronks/data/xml/to/icinga-tactical-overview-presets.xml:			<search_type>IcingaApi::SEARCH_TYPE_COUNT</search_type>
-./modules/Cronks/data/xml/to/icinga-tactical-overview-presets.xml:			<source_type>IcingaApi</source_type>
-./modules/Cronks/data/xml/to/icinga-tactical-overview-presets.xml:			<target>IcingaApi::TARGET_SERVICE</target>
-./modules/Cronks/data/xml/to/icinga-tactical-overview-presets.xml:			<search_type>IcingaApi::SEARCH_TYPE_COUNT</search_type>
-./modules/Cronks/data/xml/to/icinga-tactical-overview-presets.xml:			<source_type>IcingaApi</source_type>
-./modules/Cronks/data/xml/to/icinga-tactical-overview-presets.xml:			<target>IcingaApi::TARGET_HOST</target>
-./modules/Cronks/data/xml/to/icinga-tactical-overview-presets.xml:			<search_type>IcingaApi::SEARCH_TYPE_COUNT</search_type>
-./modules/Cronks/data/xml/to/icinga-tactical-overview-presets.xml:			<source_type>IcingaApi</source_type>
-./modules/Cronks/data/xml/to/icinga-tactical-overview-presets.xml:			<target>IcingaApi::TARGET_SERVICE</target>
-./modules/Cronks/data/xml/to/icinga-tactical-overview-presets.xml:			<search_type>IcingaApi::SEARCH_TYPE_COUNT</search_type>
-./modules/Cronks/data/xml/to/icinga-tactical-overview-template-iteration.xml:			<source_type>IcingaApi</source_type>
-./modules/Cronks/data/xml/to/icinga-tactical-overview-template-iteration.xml:			<target>IcingaApi::TARGET_HOST</target>
-./modules/Cronks/data/xml/to/icinga-tactical-overview-template-cv.xml:			<source_type>IcingaApi</source_type>
-./modules/Cronks/data/xml/to/icinga-tactical-overview-template-cv.xml:			<target>IcingaApi::TARGET_CUSTOMVARIABLE</target>
-./modules/Cronks/data/xml/to/icinga-tactical-overview-template-cv.xml:			<source_type>IcingaApi</source_type>
-./modules/Cronks/data/xml/to/icinga-tactical-overview-template-cv.xml:			<target>IcingaApi::TARGET_CUSTOMVARIABLE</target>
-./modules/Cronks/data/xml/to/icinga-tactical-overview-template-cvtree.xml:			<source_type>IcingaApi</source_type>
-./modules/Cronks/data/xml/to/icinga-tactical-overview-template-cvtree.xml:			<target>IcingaApi::TARGET_CUSTOMVARIABLE</target>
-./modules/Cronks/data/xml/to/icinga-tactical-overview-template-cvtree.xml:					<match>IcingaApi::MATCH_EXACT</match>
-./modules/Cronks/data/xml/to/icinga-tactical-overview-template-charts.xml:			<source_type>IcingaApi</source_type>
-./modules/Cronks/data/xml/to/icinga-tactical-overview-template-charts.xml:			<target>IcingaApi::TARGET_HOST_STATUS_SUMMARY</target>
-./modules/Cronks/data/xml/to/icinga-tactical-overview-template-charts.xml:			<source_type>IcingaApi</source_type>
-./modules/Cronks/data/xml/to/icinga-tactical-overview-template-charts.xml:			<target>IcingaApi::TARGET_SERVICE_STATUS_SUMMARY</target>
-./modules/Cronks/data/xml/grid/icinga-hostgroup-summary-template.xml:        		<parameter name="IcingaApi::COMMAND_HOSTGROUP">hostgroup_name</parameter>
-./modules/Cronks/data/xml/grid/icinga-hostgroup-summary-template.xml:				<parameter name="IcingaApi::COMMAND_INSTANCE">instance_name</parameter>
-./modules/Cronks/data/xml/grid/icinga-hostgroup-summary-template.xml:        		<parameter name="IcingaApi::COMMAND_AUTHOR">${xmlfn.author}</parameter>
-./modules/Cronks/data/xml/grid/icinga-hostgroup-summary-template.xml:        <parameter name="target">IcingaApi::TARGET_HOSTGROUP_SUMMARY</parameter>
-./modules/Cronks/data/xml/grid/icinga-downtime-template.xml:        		<parameter name="IcingaApi::COMMAND_DOWNTIME_ID">downtime_internal_id</parameter>
-./modules/Cronks/data/xml/grid/icinga-downtime-template.xml:        		<parameter name="IcingaApi::COMMAND_INSTANCE">instance_name</parameter>
-./modules/Cronks/data/xml/grid/icinga-downtime-template.xml:        		<parameter name="IcingaApi::COMMAND_AUTHOR">${xmlfn.author}</parameter>
-./modules/Cronks/data/xml/grid/icinga-downtime-template.xml:				<parameter name="IcingaApi::COMMAND_ENDTIME">now+7200</parameter>
-./modules/Cronks/data/xml/grid/icinga-downtime-template.xml:        <parameter name="target">IcingaApi::TARGET_DOWNTIME</parameter>
-./modules/Cronks/data/xml/grid/icinga-servicegroup-summary-template.xml:        		<parameter name="IcingaApi::COMMAND_SERVICEGROUP">servicegroup_name</parameter>
-./modules/Cronks/data/xml/grid/icinga-servicegroup-summary-template.xml:				<parameter name="IcingaApi::COMMAND_INSTANCE">instance_name</parameter>
-./modules/Cronks/data/xml/grid/icinga-servicegroup-summary-template.xml:        		<parameter name="IcingaApi::COMMAND_AUTHOR">${xmlfn.author}</parameter>
-./modules/Cronks/data/xml/grid/icinga-servicegroup-summary-template.xml:        <parameter name="target">IcingaApi::TARGET_SERVICEGROUP_SUMMARY</parameter>
-./modules/Cronks/data/xml/grid/icinga-service-template.xml:        		<parameter name="IcingaApi::COMMAND_HOST">host_name</parameter>
-./modules/Cronks/data/xml/grid/icinga-service-template.xml:        		<parameter name="IcingaApi::COMMAND_SERVICE">service_name</parameter>
-./modules/Cronks/data/xml/grid/icinga-service-template.xml:				<parameter name="IcingaApi::COMMAND_INSTANCE">instance_name</parameter>
-./modules/Cronks/data/xml/grid/icinga-service-template.xml:        		<parameter name="IcingaApi::COMMAND_AUTHOR">${xmlfn.author}</parameter>
-./modules/Cronks/data/xml/grid/icinga-service-template.xml:			<parameter name="IcingaApi::COMMAND_ENDTIME">now+7200</parameter>
-./modules/Cronks/data/xml/grid/icinga-service-template.xml:        <parameter name="target">IcingaApi::TARGET_SERVICE</parameter>
-./modules/Cronks/data/xml/grid/icinga-open-problems-template.xml:        		<parameter name="IcingaApi::COMMAND_HOST">host_name</parameter>
-./modules/Cronks/data/xml/grid/icinga-open-problems-template.xml:				<parameter name="IcingaApi::COMMAND_INSTANCE">instance_name</parameter>
-./modules/Cronks/data/xml/grid/icinga-open-problems-template.xml:        		<parameter name="IcingaApi::COMMAND_AUTHOR">${xmlfn.author}</parameter>
-./modules/Cronks/data/xml/grid/icinga-open-problems-template.xml:        <parameter name="target">IcingaApi::TARGET_HOST_SERVICE</parameter>
-./modules/Cronks/data/xml/grid/icinga-host-template.xml:        		<parameter name="IcingaApi::COMMAND_HOST">host_name</parameter>
-./modules/Cronks/data/xml/grid/icinga-host-template.xml:				<parameter name="IcingaApi::COMMAND_INSTANCE">instance_name</parameter>
-./modules/Cronks/data/xml/grid/icinga-host-template.xml:        		<parameter name="IcingaApi::COMMAND_AUTHOR">${xmlfn.author}</parameter>
-./modules/Cronks/data/xml/grid/icinga-host-template.xml:				<parameter name="IcingaApi::COMMAND_ENDTIME">now+7200</parameter>
-./modules/Cronks/data/xml/grid/icinga-host-template.xml:        <parameter name="target">IcingaApi::TARGET_HOST</parameter>
-./modules/Cronks/data/xml/grid/icinga-service-history-template.xml:        <parameter name="target">IcingaApi::TARGET_SERVICE_STATUS_HISTORY</parameter>
-./modules/Cronks/data/xml/grid/icinga-host-history-template.xml:        <parameter name="target">IcingaApi::TARGET_HOST_STATUS_HISTORY</parameter>
-./modules/Cronks/data/xml/grid/icinga-notification-template.xml:        <parameter name="target">IcingaApi::TARGET_NOTIFICATIONS</parameter>
-./modules/Cronks/data/xml/grid/icinga-log-template.xml:        <parameter name="target">IcingaApi::TARGET_LOG</parameter>
-./modules/Web/config/autoload.xml:		<autoload name="IcingaApiClassUtil">%core.module_dir%/Web/lib/util/IcingaApiClassUtil.class.php</autoload>
-./modules/Web/config/icinga-io.site.xml:		<ae:parameter name="api_type">IcingaApi::CONNECTION_IDO</ae:parameter>
-./modules/Web/config/icinga-io.xml.in:				<setting name="api.file">@icinga_api@/IcingaApi.php</setting>
-./modules/Web/config/icinga-io.xml.in:					IcingaApi classname
-./modules/Web/config/icinga-io.xml.in:				<setting name="api.class">IcingaApi</setting>
-./modules/Web/config/icinga-io.xml.in:					<!-- IcingaApi connection interface -->
-./modules/Web/config/icinga-io.xml.in:					<ae:parameter name="api_type">IcingaApi::@api_type@</ae:parameter>
-./modules/Web/config/icinga-io.xml.in:					<!-- Database specific (IcingaApi::CONNECTION_IDO) -->
-./modules/Web/config/icinga-io.xml.in:					<!-- MK Lifestatus options (IcingaApi::CONNECTION_LIFESTATUS) -->
-./modules/Web/config/icinga-io.xml.in:						<ae:parameter name="type">IcingaApi::COMMAND_PIPE</ae:parameter>
-./modules/Web/config/icinga-io.xml.in:						<ae:parameter name="type">IcingaApi::COMMAND_PIPE</ae:parameter>
-./modules/Web/config/icinga-io.xml.in:						<ae:parameter name="type">IcingaApi::COMMAND_PIPE</ae:parameter>
-./modules/Web/config/icinga-io.xml.in:						<ae:parameter name="type">IcingaApi::COMMAND_SSH</ae:parameter>
-./modules/Web/config/simple_data_provider.xml:			<ae:parameter name="action">IcingaApiSimpleDataProvider</ae:parameter>
-./modules/Web/config/simple_data_provider.xml:			<ae:parameter name="target">IcingaApi::TARGET_COMMENT</ae:parameter>
-./modules/Web/config/simple_data_provider.xml:					<ae:parameter name="match_type">IcingaApi::MATCH_EXACT</ae:parameter>
-./modules/Web/config/simple_data_provider.xml:					<ae:parameter name="match_type">IcingaApi::MATCH_EXACT</ae:parameter>
-./modules/Web/config/simple_data_provider.xml:			<ae:parameter name="action">IcingaApiSimpleDataProvider</ae:parameter>
-./modules/Web/config/simple_data_provider.xml:			<ae:parameter name="target">IcingaApi::TARGET_HOST</ae:parameter>
-./modules/Web/config/simple_data_provider.xml:					<ae:parameter name="match_type">IcingaApi::MATCH_LIKE</ae:parameter>
-./modules/Web/config/simple_data_provider.xml:					<ae:parameter name="match_type">IcingaApi::MATCH_EXACT</ae:parameter>
-./modules/Web/config/simple_data_provider.xml:			<ae:parameter name="action">IcingaApiSimpleDataProvider</ae:parameter>
-./modules/Web/config/simple_data_provider.xml:			<ae:parameter name="target">IcingaApi::TARGET_SERVICE</ae:parameter>
-./modules/Web/config/simple_data_provider.xml:					<ae:parameter name="match_type">IcingaApi::MATCH_LIKE</ae:parameter>
-./modules/Web/config/simple_data_provider.xml:					<ae:parameter name="match_type">IcingaApi::MATCH_EXACT</ae:parameter>
-./modules/Web/config/simple_data_provider.xml:					<ae:parameter name="match_type">IcingaApi::MATCH_EXACT</ae:parameter>
-./modules/Web/config/icinga-io.xml:				<setting name="api.file">/usr/local/icinga/share/icinga-api/IcingaApi.php</setting>
-./modules/Web/config/icinga-io.xml:					IcingaApi classname
-./modules/Web/config/icinga-io.xml:				<setting name="api.class">IcingaApi</setting>
-./modules/Web/config/icinga-io.xml:					<!-- IcingaApi connection interface -->
-./modules/Web/config/icinga-io.xml:					<ae:parameter name="api_type">IcingaApi::CONNECTION_IDO</ae:parameter>
-./modules/Web/config/icinga-io.xml:					<!-- Database specific (IcingaApi::CONNECTION_IDO) -->
-./modules/Web/config/icinga-io.xml:						<ae:parameter name="type">IcingaApi::COMMAND_PIPE</ae:parameter>
-./modules/Web/config/icinga-io.xml:						<ae:parameter name="type">IcingaApi::COMMAND_PIPE</ae:parameter>
-./modules/Web/config/icinga-io.xml:						<ae:parameter name="type">IcingaApi::COMMAND_PIPE</ae:parameter>
-./modules/Web/config/icinga-io.xml:						<ae:parameter name="type">IcingaApi::COMMAND_SSH</ae:parameter>
-./modules/Web/models/Icinga/ApiContainerModel.class.php: * Provides access to preconfigured IcingaApi
-./modules/Web/models/Icinga/ApiContainerModel.class.php:     * @var IcingaApiConnection
-./modules/Web/models/Icinga/ApiContainerModel.class.php:     * Array of IcingaApiCommandDispatcher
-./modules/Web/models/Icinga/ApiContainerModel.class.php:        // Notice about missing IcingaApi
-./modules/Web/models/Icinga/ApiContainerModel.class.php:                    $this->apiDispatcher[$key] = IcingaApi::getCommandDispatcher();
-./modules/Web/models/Icinga/ApiContainerModel.class.php:     * Initiates the IcingaApiConnection
-./modules/Web/models/Icinga/ApiContainerModel.class.php:     * @throws IcingaApiException
-./modules/Web/models/Icinga/ApiContainerModel.class.php:        $this->apiData = IcingaApi::getConnection($type, $capi);
-./modules/Web/models/Icinga/ApiContainerModel.class.php:                throw new AppKitModelException('IcingaApi setting \'%s\' not configured', $setting);
-./modules/Web/models/Icinga/ApiContainerModel.class.php:     * Check the IcingaApi class, includes
-./modules/Web/models/Icinga/ApiContainerModel.class.php:        IcingaApiClassUtil::initialize();
-./modules/Web/models/Icinga/ApiContainerModel.class.php:     * @return IcingaApiConnection
-./modules/Web/models/Icinga/ApiContainerModel.class.php:     * @return IcingaApiConnection
-./modules/Web/models/Icinga/ApiContainerModel.class.php:     * @return IcingaApiSearch
-./modules/Web/models/Icinga/ApiContainerModel.class.php:        throw new IcingaApiException("Could not create search (method not found)");
-./modules/Web/models/Icinga/ApiContainerModel.class.php:     * Sends a single IcingaApi command definition
-./modules/Web/models/Icinga/ApiContainerModel.class.php:     * @param IcingaApiCommand $cmd
-./modules/Web/models/Icinga/ApiContainerModel.class.php:    public function dispatchCommand(IcingaApiCommand &$cmd) {
-./modules/Web/models/Icinga/ApiContainerModel.class.php:                $this->errors[] = new IcingaApiCommandException($lerror);
-./modules/Web/models/Icinga/ApiContainerModel.class.php:                    } catch (IcingaApiCommandException $e) {
-./modules/Web/models/Icinga/ApiContainerModel.class.php:            throw new IcingaApiCommandException('Errors occured try getLastError to fetch a exception stack!');
-Übereinstimmungen in Binärdatei ./modules/Web/models/Icinga/.LegacyApiContainerModel.class.php.swp.
-Übereinstimmungen in Binärdatei ./modules/Web/models/Icinga/.ApiContainerModel.class.php.swp.
-./modules/Web/models/Icinga/LegacyApiContainerModel.class.php: * Provides access to preconfigured IcingaApi
-./modules/Web/models/Icinga/LegacyApiContainerModel.class.php:     * @var IcingaApiConnection
-./modules/Web/models/Icinga/LegacyApiContainerModel.class.php:     * Array of IcingaApiCommandDispatcher
-./modules/Web/models/Icinga/LegacyApiContainerModel.class.php:        // Notice about missing IcingaApi
-./modules/Web/models/Icinga/LegacyApiContainerModel.class.php:                    $this->apiDispatcher[$key] = IcingaApi::getCommandDispatcher();
-./modules/Web/models/Icinga/LegacyApiContainerModel.class.php:     * Initiates the IcingaApiConnection
-./modules/Web/models/Icinga/LegacyApiContainerModel.class.php:     * @throws IcingaApiException
-./modules/Web/models/Icinga/LegacyApiContainerModel.class.php:        $this->apiData = IcingaApi::getConnection($type, $capi);
-./modules/Web/models/Icinga/LegacyApiContainerModel.class.php:                throw new AppKitModelException('IcingaApi setting \'%s\' not configured', $setting);
-./modules/Web/models/Icinga/LegacyApiContainerModel.class.php:     * Check the IcingaApi class, includes
-./modules/Web/models/Icinga/LegacyApiContainerModel.class.php:        IcingaApiClassUtil::initialize();
-./modules/Web/models/Icinga/LegacyApiContainerModel.class.php:     * @return IcingaApiConnection
-./modules/Web/models/Icinga/LegacyApiContainerModel.class.php:     * @return IcingaApiConnection
-./modules/Web/models/Icinga/LegacyApiContainerModel.class.php:     * @return IcingaApiSearch
-./modules/Web/models/Icinga/LegacyApiContainerModel.class.php:        throw new IcingaApiException("Could not create search (method not found)");
-./modules/Web/models/Icinga/LegacyApiContainerModel.class.php:     * Sends a single IcingaApi command definition
-./modules/Web/models/Icinga/LegacyApiContainerModel.class.php:     * @param IcingaApiCommand $cmd
-./modules/Web/models/Icinga/LegacyApiContainerModel.class.php:    public function dispatchCommand(IcingaApiCommand &$cmd) {
-./modules/Web/models/Icinga/LegacyApiContainerModel.class.php:                $this->errors[] = new IcingaApiCommandException($lerror);
-./modules/Web/models/Icinga/LegacyApiContainerModel.class.php:                    } catch (IcingaApiCommandException $e) {
-./modules/Web/models/Icinga/LegacyApiContainerModel.class.php:            throw new IcingaApiCommandException('Errors occured try getLastError to fetch a exception stack!');
-./modules/Web/models/Icinga/ApiSimpleDataProviderModel.class.php:     * @var IcingaApiSearch
-./modules/Web/models/Icinga/ApiSimpleDataProviderModel.class.php:    private function prepareOutput(IcingaApiResult $result) {
-./modules/Web/models/Icinga/ApiSimpleDataProviderModel.class.php:    private function setSearchFilter($filter, $value = false, $defaultMatch = IcingaApi::MATCH_EXACT) {
-./modules/Web/models/Icinga/ApiSimpleDataProviderModel.class.php:        if ($defaultMatch != IcingaApi::MATCH_EXACT && defined($defaultMatch)) {
-./modules/Web/actions/Icinga/ApiSearchAction.class.php:        $search->setResultType(IcingaApiSearch::RESULT_ARRAY);
-./modules/Web/actions/Icinga/ApiSearchAction.class.php:            $search->setSearchType(IcingaApiSearch::SEARCH_TYPE_COUNT);
-./modules/Web/actions/Icinga/ApiSearchAction.class.php:            $search->setResultType(IcingaApiSearch::RESULT_ARRAY);
-./modules/Web/actions/Icinga/ApiSearchAction.class.php:    protected function addFilters(IcingaApiSearchIdo $search,AgaviRequestDataHolder $rd) {
-./modules/Web/actions/Icinga/ApiSearchAction.class.php:    public function buildFiltersFromArray(IcingaApiSearchIdo $search, array $filterdef) {
-./modules/Web/actions/Icinga/ApiSearchAction.class.php:    public function setGrouping(IcingaApiSearchIdo $search,AgaviRequestDataHolder $rd) {
-./modules/Web/actions/Icinga/ApiSearchAction.class.php:    public function setOrder(IcingaApiSearchIdo $search,AgaviRequestDataHolder $rd) {
-./modules/Web/actions/Icinga/ApiSearchAction.class.php:    public function setColumns(IcingaApiSearchIdo $search,AgaviRequestDataHolder $rd) {
-./modules/Web/actions/Icinga/ApiSearchAction.class.php:        if ($search->getSearchType() == IcingaApiSearch::SEARCH_TYPE_COUNT) {
-./modules/Web/actions/Icinga/ApiSearchAction.class.php:    public function setLimit(IcingaApiSearchIdo $search,AgaviRequestDataHolder $rd) {
-./modules/Web/actions/Icinga/ApiCommandAction.class.php:        } catch (IcingaApiCommandException $e) {
-./modules/Web/actions/Icinga/ApiCommandAction.class.php:            $cmd = IcingaApi::getCommandObject();
-./modules/Web/lib/principal/IcingaPrincipalTargetTool.class.php:    public static function applyApiSecurityPrincipals(IcingaApiSearchIdo &$search) {
-./modules/Web/lib/principal/IcingaPrincipalTargetTool.class.php:                    $search->setSearchFilterAppendix($map, IcingaApi::SEARCH_AND);
-./modules/Web/lib/principal/IcingaPrincipalTargetTool.class.php:            $search->setSearchFilterAppendix($query, IcingaApi::SEARCH_AND);
-./modules/Web/lib/principal/IcingaPrincipalTargetTool.class.php:    static protected function checkIfTargetAffectsSearch(IcingaDataPrincipalTarget $target,IcingaApiSearchIdo $search,$apiMapping) {
-./modules/Web/lib/tdisplay/IcingaTemplateDisplayMonitoring.class.php:                   ->setResultType(IcingaApi::RESULT_ARRAY)
-./modules/Web/lib/tdisplay/IcingaTemplateDisplayMonitoring.class.php:                   ->setSearchFilter('COMMENT_OBJECT_ID', $object_id, IcingaApi::MATCH_EXACT)
-./modules/Web/lib/tdisplay/IcingaTemplateDisplayMonitoring.class.php:                   ->setSearchFilter('COMMENT_INSTANCE_ID', $instance_id, IcingaApi::MATCH_EXACT)
-./modules/Web/lib/tdisplay/IcingaTemplateDisplayMonitoring.class.php:                   ->setSearchTarget(IcingaApi::TARGET_COMMENT)
-./modules/Web/lib/tdisplay/IcingaTemplateDisplayMonitoring.class.php:                   ->setSearchType(IcingaApi::SEARCH_TYPE_COUNT)
-./modules/Web/lib/tdisplay/IcingaTemplateDisplayServiceIcons.class.php:        $dh = $this->getIcingaApi()->createSearch()
-./modules/Web/lib/tdisplay/IcingaTemplateDisplayServiceIcons.class.php:              ->setSearchTarget(IcingaApi::TARGET_SERVICE)
-./modules/Web/lib/tdisplay/IcingaTemplateDisplayServiceIcons.class.php:        $dh = $this->getIcingaApi()->createSearch()
-./modules/Web/lib/tdisplay/IcingaTemplateDisplayServiceIcons.class.php:              ->setSearchTarget(IcingaApi::TARGET_HOST)
-./modules/Web/lib/tdisplay/IcingaTemplateDisplayServiceIcons.class.php:     * @param IcingaApiSearch $dh
-./modules/Web/lib/tdisplay/IcingaTemplateDisplayServiceIcons.class.php:    private function buildIcons(IcingaApiSearch &$dh, array $mapping) {
-./modules/Web/lib/tdisplay/IcingaTemplateDisplayServiceIcons.class.php:     * @return IcingaApiConnectionIdo
-./modules/Web/lib/tdisplay/IcingaTemplateDisplayServiceIcons.class.php:    private function getIcingaApi() {
-./modules/Web/lib/template/IcingaTemplateWorker.class.php:     * @var IcingaApiConnectionIdo
-./modules/Web/lib/template/IcingaTemplateWorker.class.php:     * @var IcingaApiSearchIdo
-./modules/Web/lib/template/IcingaTemplateWorker.class.php:     * @var IcingaApiSearchIdo
-./modules/Web/lib/template/IcingaTemplateWorker.class.php:    public function setApi(IcingaApi $api) {
-./modules/Web/lib/template/IcingaTemplateWorker.class.php:     * @return IcingaApiConnectionIdo
-./modules/Web/lib/template/IcingaTemplateWorker.class.php:                $this->api_count->setSearchType(IcingaApi::SEARCH_TYPE_COUNT);
-./modules/Web/lib/template/IcingaTemplateWorker.class.php:                    $this->api_count->setResultType(IcingaApi::RESULT_ARRAY);
-./modules/Web/lib/template/IcingaTemplateWorker.class.php:     * @param IcingaApiResult$result
-./modules/Web/lib/template/IcingaTemplateWorker.class.php:    private function addAdditionalFieldResults(IcingaApiResult $result) {
-./modules/Web/lib/template/IcingaTemplateWorker.class.php:     * @param IcingaApiResult $result
-./modules/Web/lib/template/IcingaTemplateWorker.class.php:    private function rewriteResultRow(IcingaApiResult $result) {
-./modules/Web/lib/template/IcingaTemplateWorker.class.php:    private function setPrivileges(IcingaApiSearchInterface &$search) {
-./modules/Web/lib/template/IcingaTemplateWorker.class.php:                    if ($condition instanceof IcingaApiSearchFilter) {
-./modules/Web/lib/util/IcingaApiClassUtil.class.php: * Description of IcingaApiClassUtil
-./modules/Web/lib/util/IcingaApiClassUtil.class.php:class IcingaApiClassUtil {
-./modules/Web/lib/util/IcingaApiClassUtil.class.php:            throw new IcingaApiClassUtilException('Module \'Web\' not ready initialized!');
-./modules/Web/lib/util/IcingaApiClassUtil.class.php:        throw new IcingaApiClassUtilException('Classfile \'%s\' does not exist!', $classFile);
-./modules/Web/lib/util/IcingaApiClassUtil.class.php:class IcingaApiClassUtilException extends IcingaBaseException {}
-./modules/Web/config.php:IcingaApiClassUtil::initialize();
-./modules/Web/views/Icinga/ApiSimpleDataProviderSuccessView.class.php:        $this->setAttribute('_title', 'IcingaApiSimpleDataProvider');
-./modules/AppKit/lib/database/AppKitSQLConstants.class.php:                                           self::SQL_OP_IS				=> IcingaApi::MATCH_EXACT,
-./modules/AppKit/lib/database/AppKitSQLConstants.class.php:                                           self::SQL_OP_NOTIS			=> IcingaApi::MATCH_NOT_EQUAL,
-./modules/AppKit/lib/database/AppKitSQLConstants.class.php:                                           self::SQL_OP_CONTAIN		=> IcingaApi::MATCH_LIKE,
-./modules/AppKit/lib/database/AppKitSQLConstants.class.php:                                           self::SQL_OP_NOTCONTAIN		=> IcingaApi::MATCH_NOT_LIKE,
-./modules/AppKit/lib/database/AppKitSQLConstants.class.php:                                           self::SQL_OP_GREATERTHAN	=> IcingaApi::MATCH_GREATER_THAN,
-./modules/AppKit/lib/database/AppKitSQLConstants.class.php:                                           self::SQL_OP_LESSTHAN		=> IcingaApi::MATCH_LESS_THAN,
-./modules/AppKit/lib/database/AppKitSQLConstants.class.php:                                           self::SQL_OP_GREATEROREQUAL	=> IcingaApi::MATCH_GREATER_OR_EQUAL,
-./modules/AppKit/lib/database/AppKitSQLConstants.class.php:                                           self::SQL_OP_LESSOREQUAL	=> IcingaApi::MATCH_LESS_OR_EQUAL
diff --git a/app/config/config_handlers.xml b/app/config/config_handlers.xml
index 54ff0d9..87d4291 100755
--- a/app/config/config_handlers.xml
+++ b/app/config/config_handlers.xml
@@ -76,6 +76,19 @@
 				<validation>%core.module_dir%/Cronks/lib/xml/xsd/cronks.xsd</validation>
 			</handler>
             
+            <!-- Menu handler --> 
+            <handler pattern="%core.config_dir%/menu.xml" class="AppKitXIncludeConfigHandler">
+                <ae:parameters>
+                    <ae:parameter name="query"><![CDATA[//ae:configurations/ae:configuration]]></ae:parameter>
+                    <ae:parameter name="pointer"><![CDATA[xmlns(ae=http://agavi.org/agavi/config/global/envelope/1.0) xmlns(m=http://icinga.org/icinga/config/global/menu/1.0) xpointer(//ae:configurations/ae:configuration/m:menu)]]></ae:parameter>
+                </ae:parameters>
+
+				<ae:parameter name="handler">AppKitMenuConfigHandler</ae:parameter>
+                <validation>%core.module_dir%/AppKit/lib/xml/xsd/menu.xsd</validation>
+           
+            </handler>
+
+           
         </handlers>
     </ae:configuration>
 </ae:configurations>
diff --git a/app/config/factories.xml b/app/config/factories.xml
index 96f25fd..6078bf3 100755
--- a/app/config/factories.xml
+++ b/app/config/factories.xml
@@ -25,13 +25,14 @@
 		
 		<security_filter class="AgaviSecurityFilter" />
 		
-		<!-- Config for our session ... -->
+		<storage class="AgaviSessionStorage"></storage>
+		<!-- Config for our session ... 
 		<storage class="AppKitDoctrineSessionStorage">
 			<ae:parameter name="session_cookie_lifetime">0</ae:parameter>
 			<ae:parameter name="session_name">icinga-web</ae:parameter>
 			<ae:parameter name="gzip_level">6</ae:parameter>
 		</storage>
-		
+	-->	
 		<translation_manager class="AppKitTranslationManager" />
 		
 		<user class="AppKitSecurityUser" />
diff --git a/app/data/log/PLACEHOLDER b/app/data/log/PLACEHOLDER
deleted file mode 100755
index e69de29..0000000
diff --git a/app/modules/Api/config/.access.xml.swo b/app/modules/Api/config/.access.xml.swo
deleted file mode 100644
index 787b7c0..0000000
Binary files a/app/modules/Api/config/.access.xml.swo and /dev/null differ
diff --git a/app/modules/Api/config/access.xml b/app/modules/Api/config/access.xml
index 6d4f307..3507535 100644
--- a/app/modules/Api/config/access.xml
+++ b/app/modules/Api/config/access.xml
@@ -4,6 +4,9 @@
     <!-- Map your instances to hosts here -->
 	<setting name="instances">
         <ae:parameter name="default">localhost</ae:parameter>
+        <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="access.site.xml" xpointer="xmlns(m=http://agavi.org/agavi/config/parts/module/1.0) xpointer(//m:settings/m:setting[@name='instances']/node())">
+            <xi:fallback></xi:fallback>
+        </xi:include>
     </setting>
 
     <!--
@@ -40,7 +43,9 @@
 				</ae:parameter>
 			</ae:parameter>
 		</ae:parameter>						
-
+        <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="access.site.xml" xpointer="xmlns(m=http://agavi.org/agavi/config/parts/module/1.0) xpointer(//m:settings/m:setting[@name='defaults']/node())">
+			<xi:fallback></xi:fallback>
+		</xi:include>
 	</setting>
 	
 	
@@ -96,10 +101,12 @@
 			</ae:parameter>	
 		</ae:parameter>
 -->
-	</setting>
+        <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="access.site.xml" xpointer="xmlns(m=http://agavi.org/agavi/config/parts/module/1.0) xpointer(//m:settings/m:setting[@name='hosts']/node())">
+            <xi:fallback></xi:fallback>
+        </xi:include>
+
 
 
-    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="access.site.xml#xpointer(settings/node())">
-	    <xi:fallback></xi:fallback>
-	</xi:include>
+	</setting>
+
 </settings>
diff --git a/app/modules/Api/models/.DeprecatedApiContainerModel.class.php.swo b/app/modules/Api/models/.DeprecatedApiContainerModel.class.php.swo
deleted file mode 100644
index f309051..0000000
Binary files a/app/modules/Api/models/.DeprecatedApiContainerModel.class.php.swo and /dev/null differ
diff --git a/app/modules/Api/models/Commands/CommandDispatcherModel.class.php b/app/modules/Api/models/Commands/CommandDispatcherModel.class.php
index e26e9e1..59848a4 100644
--- a/app/modules/Api/models/Commands/CommandDispatcherModel.class.php
+++ b/app/modules/Api/models/Commands/CommandDispatcherModel.class.php
@@ -76,7 +76,7 @@ class Api_Commands_CommandDispatcherModel extends IcingaApiBaseModel implements
     }
 
     protected function loadConfig() { 
-       $this->config = include AgaviConfigCache::checkConfig(AgaviToolkit::expandDirectives('%core.module_dir%/Api/config/icingaCommands.xml'));
+       $this->config = include AgaviConfigCache::checkConfig(AgaviToolkit::expandDirectives('%core.config_dir%/menu.xml'));
     }
 
 } 
diff --git a/app/modules/AppKit/actions/Widgets/HeaderDataAction.class.php b/app/modules/AppKit/actions/Widgets/HeaderDataAction.class.php
index ccea7b4..2cca6ae 100755
--- a/app/modules/AppKit/actions/Widgets/HeaderDataAction.class.php
+++ b/app/modules/AppKit/actions/Widgets/HeaderDataAction.class.php
@@ -8,7 +8,10 @@ class AppKit_Widgets_HeaderDataAction extends AppKitBaseAction {
 	
 	public function execute(AgaviRequestDataHolder $rd) {
 		$type = $rd->getParameter('type', 'javascript');
-		
+
+
+         
+	
 		switch($type) {
 			case 'javascript':
 				$includes = array(
@@ -31,8 +34,8 @@ class AppKit_Widgets_HeaderDataAction extends AppKitBaseAction {
 				break;
 		}
 		$this->setAttribute('includes', $includes);
-		
+       
 		return $this->getDefaultViewName();
 	}
 	
-}
\ No newline at end of file
+}
diff --git a/app/modules/AppKit/config/autoload.xml b/app/modules/AppKit/config/autoload.xml
index 774f26e..2881e3f 100755
--- a/app/modules/AppKit/config/autoload.xml
+++ b/app/modules/AppKit/config/autoload.xml
@@ -30,6 +30,7 @@
 		<autoload name="AppKitFactoryInterface">%core.module_dir%/AppKit/lib/class/AppKitFactoryInterface.interface.php</autoload>
 		<autoload name="AppKitSingleton">%core.module_dir%/AppKit/lib/class/AppKitSingleton.class.php</autoload>
 		
+		
 		<!-- The same -->
 		<autoload name="AppKitBaseClass">%core.module_dir%/AppKit/lib/class/AppKitBaseClass.class.php</autoload>
 		<autoload name="AppKitException">%core.module_dir%/AppKit/lib/exception/AppKitException.class.php</autoload>
@@ -39,25 +40,9 @@
 		<autoload name="AppKitDoctrineException">%core.module_dir%/AppKit/lib/doctrine/AppKitDoctrineException.class.php</autoload>
 		<autoload name="AppKitDoctrineRecord">%core.module_dir%/AppKit/lib/doctrine/AppKitDoctrineRecord.class.php</autoload>
 		<autoload name="AppKitDoctrineUtil">%core.module_dir%/AppKit/lib/doctrine/AppKitDoctrineUtil.class.php</autoload>
-		<autoload name="AppKitEvent">%core.module_dir%/AppKit/lib/event/AppKitEvent.class.php</autoload>
-		<autoload name="AppKitEventHandler">%core.module_dir%/AppKit/lib/event/AppKitEventHandler.class.php</autoload>
-		<autoload name="AppKitEventHandlerInterface">%core.module_dir%/AppKit/lib/event/AppKitEventHandlerInterface.interface.php</autoload>
-		<autoload name="AppKitEventDispatcher">%core.module_dir%/AppKit/lib/event/AppKitEventDispatcher.class.php</autoload>
-		<autoload name="AppKitModelException">%core.module_dir%/AppKit/lib/exception/AppKitModelException.class.php</autoload>
-		<autoload name="AppKitCheckboxElement">%core.module_dir%/AppKit/lib/html/form/AppKitCheckboxElement.class.php</autoload>
-		<autoload name="AppKitFormElement">%core.module_dir%/AppKit/lib/html/form/AppKitFormElement.class.php</autoload>
-		<autoload name="AppKitHiddenElement">%core.module_dir%/AppKit/lib/html/form/AppKitHiddenElement.class.php</autoload>
-		<autoload name="AppKitSelectArraySource">%core.module_dir%/AppKit/lib/html/form/AppKitSelectArraySource.class.php</autoload>
-		<autoload name="AppKitSelectCheckboxElement">%core.module_dir%/AppKit/lib/html/form/AppKitSelectCheckboxElement.class.php</autoload>
-		<autoload name="AppKitSelectDoctrineSource">%core.module_dir%/AppKit/lib/html/form/AppKitSelectDoctrineSource.class.php</autoload>
-		<autoload name="AppKitSelectElement">%core.module_dir%/AppKit/lib/html/form/AppKitSelectElement.class.php</autoload>
-		<autoload name="AppKitSelectSource">%core.module_dir%/AppKit/lib/html/form/AppKitSelectSource.class.php</autoload>
-		<autoload name="AppKitSelectSourceInterface">%core.module_dir%/AppKit/lib/html/form/AppKitSelectSourceInterface.interface.php</autoload>
-		<autoload name="AppKitTextboxElement">%core.module_dir%/AppKit/lib/html/form/AppKitTextboxElement.class.php</autoload>
-		<autoload name="AppKitHtmlEntitiesInterface">%core.module_dir%/AppKit/lib/html/AppKitHtmlEntitiesInterface.interface.php</autoload>
 		<autoload name="AppKitXmlTag">%core.module_dir%/AppKit/lib/html/AppKitXmlTag.class.php</autoload>
-		<autoload name="AppKitHtmlHelper">%core.module_dir%/AppKit/lib/html/AppKitHtmlHelper.class.php</autoload>
-		
+		<autoload name="AppKitModelException">%core.module_dir%/AppKit/lib/exception/AppKitModelException.class.php</autoload>
+	
 		<!-- JSON things -->
 		<autoload name="AppKitJsonResponse">%core.module_dir%/AppKit/lib/json/AppKitJsonResponse.class.php</autoload>
 		<autoload name="AppKitExtJsonDocument">%core.module_dir%/AppKit/lib/json/AppKitExtJsonDocument.class.php</autoload>
@@ -75,6 +60,7 @@
 		<autoload name="AppKitGettextTranslator">%core.module_dir%/AppKit/lib/translator/AppKitGettextTranslator.class.php</autoload>
 		<autoload name="AppKitTranslationManager">%core.module_dir%/AppKit/lib/translator/AppKitTranslationManager.class.php</autoload>
 		<autoload name="AppKitArrayUtil">%core.module_dir%/AppKit/lib/util/AppKitArrayUtil.class.php</autoload>
+        <autoload name="AppKitLinkedList">%core.module_dir%/AppKit/lib/util/AppKitLinkedList.class.php</autoload>
 		<autoload name="AppKitClassUtil">%core.module_dir%/AppKit/lib/util/AppKitClassUtil.class.php</autoload>
 		<autoload name="AppKitColorUtil">%core.module_dir%/AppKit/lib/util/AppKitColorUtil.class.php</autoload>
 		<autoload name="AppKitDateUtil">%core.module_dir%/AppKit/lib/util/AppKitDateUtil.class.php</autoload>
@@ -103,6 +89,7 @@
 	
 		<!-- Agavi config file handler -->
 		<autoload name="AppKitRoutingConfigHandler">%core.module_dir%/AppKit/lib/config/AppKitRoutingConfigHandler.class.php</autoload>
+		<autoload name="AppKitMenuConfigHandler">%core.module_dir%/AppKit/lib/config/AppKitMenuConfigHandler.class.php</autoload>
 	
 	    <!-- Classes for automatic clientside api creation -->
 		<autoload name="AppKitValidatorArgumentExtractor">%core.module_dir%/AppKit/lib/config/AppKitValidatorArgumentExtractor.class.php</autoload>
diff --git a/app/modules/AppKit/config/javascript.xml b/app/modules/AppKit/config/javascript.xml
index cfd67a8..498c69c 100644
--- a/app/modules/AppKit/config/javascript.xml
+++ b/app/modules/AppKit/config/javascript.xml
@@ -7,7 +7,7 @@
 
             <!-- ExtJS base files -->
             <ae:parameter>%core.root_dir%/lib/ext3/adapter/ext/ext-base.js</ae:parameter>
-            <ae:parameter>%core.root_dir%/lib/ext3/ext-all.js</ae:parameter>
+            <ae:parameter>%core.root_dir%/lib/ext3/ext-all-debug.js</ae:parameter>
 
             <!--AppKit JS -->
             <ae:parameter>%core.module_dir%/AppKit/lib/js/AppKit.js</ae:parameter>
@@ -16,6 +16,7 @@
             <ae:parameter>%core.module_dir%/AppKit/lib/js/AppKitErrorHandler.js</ae:parameter>
 
             <ae:parameter>%core.module_dir%/AppKit/lib/js/Layout.js</ae:parameter>
+            <ae:parameter>%core.module_dir%/AppKit/lib/js/AppKitNavBar.js</ae:parameter>
             <ae:parameter>%core.module_dir%/AppKit/lib/js/HttpStateProvider.js</ae:parameter>
             <ae:parameter>%core.module_dir%/AppKit/lib/js/JSONSubmit.js</ae:parameter>
             
diff --git a/app/modules/AppKit/config/module.xml b/app/modules/AppKit/config/module.xml
index c1fcff4..df2c160 100755
--- a/app/modules/AppKit/config/module.xml
+++ b/app/modules/AppKit/config/module.xml
@@ -1,89 +1,93 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <ae:configurations xmlns="http://agavi.org/agavi/config/parts/module/1.0" xmlns:ae="http://agavi.org/agavi/config/global/envelope/1.0">
-	<ae:configuration>
-		
-		<module enabled="true">
-			<settings>
-				<setting name="title">AppKit Module</setting>
-				<setting name="version">1.0</setting>
+    <ae:configuration>
+        
+        <module enabled="true">
+            <settings>
+                <setting name="title">AppKit Module</setting>
+                <setting name="version">1.0</setting>
 
-				<setting name="authors">
-					<ae:parameter name="info@icinga.org">icinga developer team</ae:parameter>
-				</setting>
-				<setting name="homepage">http://www.icinga.org</setting>
-				<setting name="update_url" />
-				<setting name="description">Appkit main application kit</setting>
+                <setting name="authors">
+                    <ae:parameter name="info@icinga.org">icinga developer team</ae:parameter>
+                </setting>
+                <setting name="homepage">http://www.icinga.org</setting>
+                <setting name="update_url" />
+                <setting name="description">Appkit main application kit</setting>
 
-				<setting name="doctrine_path">%core.root_dir%/lib/doctrine/lib</setting>
-				
-				<setting name="php_settings">
-					<ae:parameter name="session.gc_probability">3</ae:parameter>
-					<ae:parameter name="session.gc_divisor">100</ae:parameter>
-					<ae:parameter name="session.gc_maxlifetime">86400</ae:parameter>
-					
-					<!-- Set the default timezone, this is missing on some systems -->
-					<ae:parameter name="date.timezone">GMT</ae:parameter>
-				</setting>
-				
-				<!-- 
-					Menu extender
-					* Register classes to change the navigation
-				-->
-				<setting name="menu_extender">
-					<ae:parameter>IcingaMenuExtender</ae:parameter>
-				</setting>
-			
-				<!-- 
-					Eventhandling
-					* Code-less, predefined events to register tasks
-				-->
-				<setting name="custom_events">
-					<!-- This is our root menu (If all ready, the sub menues will be created -->  
-					<ae:parameter name="AppKitMenuEventDistributor">
-						<ae:parameter name="context">web</ae:parameter>
-						<ae:parameter name="event">appkit.menu</ae:parameter>
-						<ae:parameter name="class">AppKitMenuCreator</ae:parameter>
-					</ae:parameter>
-				</setting>
+                <setting name="doctrine_path">%core.root_dir%/lib/doctrine/lib</setting>
+                
+                <setting name="php_settings">
+                    <ae:parameter name="session.gc_probability">3</ae:parameter>
+                    <ae:parameter name="session.gc_divisor">100</ae:parameter>
+                    <ae:parameter name="session.gc_maxlifetime">86400</ae:parameter>
+                    
+                    <!-- Set the default timezone, this is missing on some systems -->
+                    <ae:parameter name="date.timezone">GMT</ae:parameter>
+                </setting>
+                
+                <!-- 
+                    Menu extender
+                    * Register classes to change the navigation
+                -->
+                <setting name="menu_extender">
+                    <ae:parameter>IcingaMenuExtender</ae:parameter>
+                </setting>
+            
+                <!-- 
+                    Eventhandling
+                    * Code-less, predefined events to register tasks
+                -->
+                <setting name="custom_events">
+                    <!-- This is our root menu (If all ready, the sub menues will be created -->  
+                    <ae:parameter name="AppKitMenuEventDistributor">
+                        <ae:parameter name="context">web</ae:parameter>
+                        <ae:parameter name="event">appkit.menu</ae:parameter>
+                        <ae:parameter name="class">AppKitMenuCreator</ae:parameter>
+                    </ae:parameter>
+                </setting>
 
-				<setting name="user_preferences_default">
-					<ae:parameter name="org.icinga.grid.pagerMaxItems">25</ae:parameter>
-					<ae:parameter name="org.icinga.grid.refreshTime">300</ae:parameter>
-					<ae:parameter name="org.icinga.grid.outputLength">70</ae:parameter>
-					<ae:parameter name="org.icinga.tabslider.changeTime">10</ae:parameter>
-					<ae:parameter name="org.icinga.cronk.default">portalHello</ae:parameter>
-					<ae:parameter name="org.icinga.bugTrackerEnabled">true</ae:parameter>
-					<ae:parameter name="org.icinga.errorNotificationsEnabled">true</ae:parameter>
-					<ae:parameter name="org.icinga.autoRefresh">true</ae:parameter>
-					<ae:parameter name="org.icinga.status.refreshTime">60</ae:parameter>
-				</setting>
-				
-				<!-- Ajax default request timeout (ms), 4 minutes == 240000 -->
-				<setting name="ajax.timeout">240000</setting>
+                <setting name="user_preferences_default">
+                    <ae:parameter name="org.icinga.grid.pagerMaxItems">25</ae:parameter>
+                    <ae:parameter name="org.icinga.grid.refreshTime">300</ae:parameter>
+                    <ae:parameter name="org.icinga.grid.outputLength">70</ae:parameter>
+                    <ae:parameter name="org.icinga.tabslider.changeTime">10</ae:parameter>
+                    <ae:parameter name="org.icinga.cronk.default">portalHello</ae:parameter>
+                    <ae:parameter name="org.icinga.bugTrackerEnabled">true</ae:parameter>
+                    <ae:parameter name="org.icinga.errorNotificationsEnabled">true</ae:parameter>
+                    <ae:parameter name="org.icinga.autoRefresh">true</ae:parameter>
+                    <ae:parameter name="org.icinga.status.refreshTime">60</ae:parameter>
+                </setting>
+                
+                <!-- Ajax default request timeout (ms), 4 minutes == 240000 -->
+                <setting name="ajax.timeout">240000</setting>
 
-				<setting name="agavi.include.css">
-                   			<ae:parameter>%core.module_dir%/AppKit/config/css.xml</ae:parameter>
-				</setting>
+                <setting name="agavi.include.css">
+                    <ae:parameter>%core.module_dir%/AppKit/config/css.xml</ae:parameter>
+                </setting>
                 
-		                <setting name="agavi.include.javascript">
-		                    <ae:parameter>%core.module_dir%/AppKit/config/javascript.xml</ae:parameter>
-		                </setting>
+                <setting name="agavi.include.javascript">
+                    <ae:parameter>%core.module_dir%/AppKit/config/javascript.xml</ae:parameter>
+                </setting>
+                <setting name="agavi.include.menu">
+                    <ae:parameter>%core.module_dir%/AppKit/config/menu.xml</ae:parameter>
+                </setting>
+
 
-				<setting name="appkit_module.app.javascript_actions">
-					<ae:parameter>
-						<ae:parameter name="module">AppKit</ae:parameter>
-						<ae:parameter name="action">Ext.initI18n</ae:parameter>
-						<ae:parameter name="output_type">javascript</ae:parameter>
-					</ae:parameter>
-				</setting>
+                <setting name="appkit_module.app.javascript_actions">
+                    <ae:parameter>
+                        <ae:parameter name="module">AppKit</ae:parameter>
+                        <ae:parameter name="action">Ext.initI18n</ae:parameter>
+                        <ae:parameter name="output_type">javascript</ae:parameter>
+                    </ae:parameter>
+                </setting>
 
-			</settings>
-	
-			<xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="module.site.xml">
-				<xi:fallback></xi:fallback>
-			</xi:include>		
-			<xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="auth.xml"/>
-		</module>
-		
-	</ae:configuration>
+            </settings>
+    
+            <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="module.site.xml">
+                <xi:fallback></xi:fallback>
+            </xi:include>        
+            <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="auth.xml"/>
+        </module>
+        
+    </ae:configuration>
 </ae:configurations>
diff --git a/app/modules/AppKit/lib/context/AppKitAgaviContext.class.php b/app/modules/AppKit/lib/context/AppKitAgaviContext.class.php
index aed1284..c402aa8 100644
--- a/app/modules/AppKit/lib/context/AppKitAgaviContext.class.php
+++ b/app/modules/AppKit/lib/context/AppKitAgaviContext.class.php
@@ -22,7 +22,6 @@ class AppKitAgaviContext extends AgaviContext {
 		$this->initializePhpSettings();
 		$this->initializeDoctrine();
 		$this->initializeModules();
-		$this->initializeEventHandling();
 		$this->setLanguageDomain();
 		
 		parent::initialize();
@@ -110,15 +109,7 @@ class AppKitAgaviContext extends AgaviContext {
 		}
 	}
 	
-	private function initializeEventHandling() {
-		// Register additional events from config file
-		if (is_array($events = AgaviConfig::get('modules.appkit.custom_events'))) {
-			AppKitEventDispatcher::registerEventClasses($events);
-		}
-		
-		return true;
-	}
-	
+
 	private static function setLanguageDomain() {
 		return true;
 		try {
diff --git a/app/modules/AppKit/lib/event/AppKitEvent.class.php b/app/modules/AppKit/lib/event/AppKitEvent.class.php
deleted file mode 100644
index f665f37..0000000
--- a/app/modules/AppKit/lib/event/AppKitEvent.class.php
+++ /dev/null
@@ -1,229 +0,0 @@
-<?php
-
-class AppKitEvent extends AppKitBaseClass {
-
-    const UNTOUCHED	= 0;
-    const TOUCHED	= 1;
-    const CANCELLED	= 2;
-    const RESUMED	= 4;
-
-    /**
-     * The name of the event
-     * @var string
-     */
-    private $name	= null;
-
-    /**
-     * Some information about why the event was fired
-     * @var string
-     */
-    private $info	= null;
-
-    /**
-     * Some additional mixed data
-     * @var array
-     */
-    private $data	= array();
-
-    /**
-     * A context object within the event was fired
-     * @var object
-     */
-    private $object	= null;
-
-    /**
-     * Binary flag indicates the status
-     * @var integer
-     */
-    private $status	= self::UNTOUCHED;
-
-    /**
-     * A run counter, how much the event was chained
-     * @var integer
-     */
-    private $crun	= 0;
-
-
-    /**
-     * Constructor of the event
-     * @param string $name
-     * @param 0object $obj
-     * @param string $info
-     * @author Marius Hein
-     */
-    public function __construct($name, &$obj=null, $info=null) {
-        $this->setName($name);
-
-        if ($obj !== null && is_object($obj)) {
-            $this->setObject($object);
-        }
-
-        if ($info !== null) {
-            $this->setInfo($info);
-        }
-    }
-
-    /**
-     * Sets the name of the event
-     * @param string $name
-     * @author Marius Hein
-     */
-    public function setName($name) {
-        $this->name = $name;
-    }
-
-    /**
-     * Returns the name
-     * @return string
-     * @author Marius Hein
-     */
-    public function getName() {
-        return $this->name;
-    }
-
-    /**
-     * Sets the info string
-     * @param string $info
-     * @author Marius Hein
-     */
-    public function setInfo($info) {
-        $this->info = $info;
-    }
-
-    /**
-     * Returns the info
-     * @return string
-     * @author Marius Hein
-     */
-    public function getInfo() {
-        return $this->info;
-    }
-
-    /**
-     * Sets a context object
-     * @param object $object
-     * @throws AppKitEventException
-     * @author Marius Hein
-     */
-    public function setObject($object) {
-        if (!is_object($object)) {
-            throw new AppKitEventException('$object have to be an object!');
-        }
-
-        $this->object = $object;
-    }
-
-    /**
-     * Returns the object
-     * @return object
-     * @author Marius Hein
-     */
-    public function getObject() {
-        return $this->object;
-    }
-
-    /**
-     * Adds data to the data stack
-     * @param mixed $data
-     * @param string|null $key
-     * @author Marius Hein
-     */
-    public function addData($data, $key=null) {
-        if ($key !== null) {
-            $this->data[$key] = $data;
-        } else {
-            $this->data[] = $data;
-        }
-    }
-
-    /**
-     * Fills the complete array, overwrite everything
-     * @param array $data
-     * @return boolean always true
-     */
-    public function setData(array &$data) {
-        $this->data =& $data;
-        return true;
-    }
-
-    /**
-     * Returns the data as array
-     * @return array
-     * @author Marius Hein
-     */
-    public function getData() {
-        return $this->data;
-    }
-
-    /**
-     * Returns true if a status flag is set
-     * @param integer $status_flag
-     * @return boolean
-     * @author Marius Hein
-     */
-    public function issetStatus($status_flag) {
-        if ($this->status & $status_flag) {
-            return true;
-        }
-
-        return false;
-    }
-
-    /**
-     * Sets a status flag
-     * @param integer $status_flag
-     * @author Marius Hein
-     */
-    public function setStatus($status_flag) {
-        $this->status |= $status_flag;
-    }
-
-    /**
-     * Unsets a status flag
-     * @param integer $status_flag
-     * @author Marius Hein
-     */
-    public function unsetStatus($status_flag) {
-        if ($this->status & $status_flag) {
-            $this->status = ($this->status & ~ $status_flag);
-        }
-    }
-
-    /**
-     * Returns the decimal representation of the status
-     * @return integer
-     * @author Marius Hein
-     */
-    public function getStatus() {
-        return $this->status;
-    }
-
-    /**
-     * Touch the event
-     * @return boolean
-     * @author Marius Hein
-     */
-    public function touch() {
-        $this->crun++;
-        $this->setStatus(self::TOUCHED);
-        return true;
-    }
-
-    /**
-     * Cancel the event (prevent from chaining)
-     * @return boolean
-     * @author Marius Hein
-     */
-    public function cancel() {
-        if ($this->issetStatus(self::RESUMED)) {
-            $this->unsetStatus(self::RESUMED);
-        }
-
-        $this->setStatus(self::CANCELLED);
-        return true;
-    }
-}
-
-class AppKitEventException extends AppKitException {}
-
-?>
\ No newline at end of file
diff --git a/app/modules/AppKit/lib/event/AppKitEventDispatcher.class.php b/app/modules/AppKit/lib/event/AppKitEventDispatcher.class.php
deleted file mode 100644
index df24367..0000000
--- a/app/modules/AppKit/lib/event/AppKitEventDispatcher.class.php
+++ /dev/null
@@ -1,216 +0,0 @@
-<?php
-
-class AppKitEventDispatcher extends AppKitSingleton {
-
-    const ASTERISK		= '*';
-
-    public static function registerEventClasses(array $events) {
-        $currentContext = AgaviContext::getInstance()->getName();
-        foreach($events as $name=>$event) {
-            if ($event['context'] != $currentContext) {
-                continue;
-            }
-
-            if ($event['event'] && $event['class']) {
-
-                if (!array_key_exists('parameter', $events)) {
-                    $events['parameter'] = array();
-                }
-
-                self::getInstance()->addListener(
-                    $event['event'],
-                    AppKit::getInstance($event['class'], (array_key_exists('parameter', $event)) ? $event['parameter'] : array())
-                );
-            }
-        }
-
-        return true;
-    }
-
-
-    /**
-     *
-     * @return AppKitEventDispatcher
-     * @author Marius Hein
-     */
-    public static function getInstance() {
-        return parent::getInstance('AppKitEventDispatcher');
-    }
-
-    private $listeners	= array();
-    private $stats		= array();
-
-    public function __construct() {
-        parent::__construct();
-
-        // Adding the asterisk listeners container
-        $this->listeners[self::ASTERISK] = array();
-    }
-
-    /**
-     * Adds a eventhandler to the listening stack
-     * @param string $name
-     * @param AppKitEventHandlerInterface $handler
-     * @return boolean
-     * @author Marius Hein
-     */
-    public function addListener($name, AppKitEventHandlerInterface $handler) {
-
-        if (!array_key_exists($name, $this->listeners)) {
-            $this->listeners[$name] = array();
-        }
-
-        // Invoke the main initialize method
-        $ref = new ReflectionObject($handler);
-
-        if ($ref->hasMethod('initializeHandler')) {
-            $ref->getMethod('initializeHandler')->invoke($handler);
-        }
-
-        $this->listeners[$name][] =& $handler;
-
-        return true;
-
-    }
-
-    /**
-     * Invokes a single listener, calling the initialize methods
-     * @param AppKitEventHandlerInterface $h
-     * @param AppKitEvent $e
-     * @return boolean
-     * @throws AppKitEventDispatcherException
-     * @author Marius Hein
-     */
-    private function invokeListener(AppKitEventHandlerInterface &$h, AppKitEvent &$e) {
-        $ref = new ReflectionObject($h);
-
-        if ($ref->implementsInterface('AppKitEventHandlerInterface')) {
-
-            if ($ref->hasMethod('checkEventType')) {
-                if ($ref->getMethod('checkEventType')->invoke($h, $e) !== true) {
-                    throw new AppKitEventDispatcherException('checkEventType have to return true');
-                }
-            }
-
-            if ($ref->hasMethod('checkObjectType')) {
-                if ($ref->getMethod('checkObjectType')->invoke($h, $e) !== true) {
-                    throw new AppKitEventDispatcherException('checkObjectType have to return true');
-                }
-            }
-
-            $m = $ref->getMethod('handleEvent');
-            $re = $m->invoke($h, $e);
-
-            if ($re !== true) {
-                throw new AppKitEventDispatcherException('Handler have to return true!');
-            } else {
-                $e->touch();
-                $this->writeStats('status_touched');
-            }
-
-            return true;
-        }
-
-        return false;
-    }
-
-    /**
-     * Write some stats
-     * @param string $key
-     * @param integer $add
-     * @return boolean
-     * @author Marius Hein
-     */
-    private function writeStats($key, $add=1) {
-        if (!isset($this->stats[$key])) {
-            $this->stats[$key] = 0;
-        }
-
-        $this->stats[$key] += $add;
-
-        return true;
-    }
-
-    /**
-     * Trigger a event, by a event class
-     * @param AppKitEvent $event
-     * @return boolean
-     * @author Marius Hein
-     */
-    public function triggerEvent(AppKitEvent $event) {
-
-        if (array_key_exists($event->getName(), $this->listeners)) {
-            if ($event->issetStatus(AppKitEvent::CANCELLED)) {
-                $event->unsetStatus(AppKitEvent::CANCELLED);
-                $event->setStatus(AppKitEvent::RESUMED);
-                $this->writeStats('status_resumed');
-            }
-
-            $listeners = array_merge($this->listeners[self::ASTERISK], $this->listeners[$event->getName()]);
-
-            foreach($listeners as $listener) {
-                if ($event->issetStatus(AppKitEvent::CANCELLED)) {
-                    $this->writeStats('status_cancelled');
-                    break;
-                }
-
-                $this->writeStats($event->getName());
-                $this->invokeListener($listener, $event);
-            }
-
-            return true;
-        }
-
-        return false;
-    }
-
-    /**
-     * Triggers a event without a class
-     * @param string $name
-     * @param string $info
-     * @param object $object
-     * @return AppKitEvent
-     * @author Marius Hein
-     */
-    public function triggerSimpleEvent($name, $info = null, $object=null, array &$data = null) {
-
-        $event = new AppKitEvent($name);
-
-        if ($object !== null) {
-            $event->setObject($object);
-        }
-
-        if ($info !== null) {
-            $event->setInfo($info);
-        }
-
-        if ($data !== null) {
-            $event->setData($data);
-        }
-
-        $this->triggerEvent($event);
-
-        return $event;
-    }
-
-    /**
-     * Return the stats
-     * @return array
-     * @author Marius Hein
-     */
-    public function getStats() {
-        return $this->stats;
-    }
-
-    /**
-     * Returns all registered event names
-     * @return array
-     */
-    public function getEvents() {
-        return array_keys($this->listeners);
-    }
-}
-
-class AppKitEventDispatcherException extends AppKitException {}
-
-?>
\ No newline at end of file
diff --git a/app/modules/AppKit/lib/event/AppKitEventHandler.class.php b/app/modules/AppKit/lib/event/AppKitEventHandler.class.php
deleted file mode 100644
index 54d737f..0000000
--- a/app/modules/AppKit/lib/event/AppKitEventHandler.class.php
+++ /dev/null
@@ -1,48 +0,0 @@
-<?php
-
-class AppKitEventHandler extends AppKitBaseClass {
-
-    /**
-     * The constructor
-     * @author Marius Hein
-     */
-    public function __construct() {
-
-    }
-
-    /**
-     * A method that can initialize the handler the first call if added to
-     * the listener stack
-     * @author Marius Hein
-     */
-    public function initializeHandler() {
-
-    }
-
-    /**
-     * A method placeholder to check the eventtype
-     * @param AppKitEvent $e
-     * @return boolean
-     * @throws AppKitEventHandlerException
-     * @author Marius Hein
-     */
-    public function checkEventType(AppKitEvent &$e) {
-        return true;
-    }
-
-    /**
-     * A placeholder to check the object type
-     * @param AppKitEvent $e
-     * @return boolean
-     * @throws AppKitEventHandlerException
-     * @author Marius Hein
-     */
-    public function checkObjectType(AppKitEvent &$e) {
-        return true;
-    }
-
-}
-
-class AppKitEventHandlerException extends AppKitException {}
-
-?>
\ No newline at end of file
diff --git a/app/modules/AppKit/lib/event/AppKitEventHandlerInterface.interface.php b/app/modules/AppKit/lib/event/AppKitEventHandlerInterface.interface.php
deleted file mode 100644
index a63378e..0000000
--- a/app/modules/AppKit/lib/event/AppKitEventHandlerInterface.interface.php
+++ /dev/null
@@ -1,7 +0,0 @@
-<?php
-
-interface AppKitEventHandlerInterface {
-    public function handleEvent(AppKitEvent &$event);
-}
-
-?>
\ No newline at end of file
diff --git a/app/modules/AppKit/lib/js/icinga/store/.StoreFactory.js.swo b/app/modules/AppKit/lib/js/icinga/store/.StoreFactory.js.swo
deleted file mode 100644
index 014c524..0000000
Binary files a/app/modules/AppKit/lib/js/icinga/store/.StoreFactory.js.swo and /dev/null differ
diff --git a/app/modules/AppKit/lib/storage/AppKitDoctrineSessionStorage.class.php b/app/modules/AppKit/lib/storage/AppKitDoctrineSessionStorage.class.php
index ed1f473..c41da52 100644
--- a/app/modules/AppKit/lib/storage/AppKitDoctrineSessionStorage.class.php
+++ b/app/modules/AppKit/lib/storage/AppKitDoctrineSessionStorage.class.php
@@ -8,7 +8,7 @@ class AppKitDoctrineSessionStorage extends AgaviSessionStorage {
 	private $NsmSession = null;
 	
 	public function initialize(AgaviContext $context, array $parameters = array()) {
-		
+        
 		// initialize the parent
 		parent::initialize($context, $parameters);
 		
diff --git a/app/modules/AppKit/lib/util/AppKitStringUtil.class.php b/app/modules/AppKit/lib/util/AppKitStringUtil.class.php
index 64f3390..fa34e16 100644
--- a/app/modules/AppKit/lib/util/AppKitStringUtil.class.php
+++ b/app/modules/AppKit/lib/util/AppKitStringUtil.class.php
@@ -1,6 +1,6 @@
 <?php
 
-class AppKitStringUtil implements AppKitHtmlEntitiesInterface {
+class AppKitStringUtil {
 
     /**
      * Replaces a string with marker within an attay
@@ -105,4 +105,4 @@ class AppKitStringUtil implements AppKitHtmlEntitiesInterface {
 
 }
 
-?>
\ No newline at end of file
+?>
diff --git a/app/modules/AppKit/templates/Ext/HeaderSuccess.php b/app/modules/AppKit/templates/Ext/HeaderSuccess.php
index 8ce7cb7..0122423 100755
--- a/app/modules/AppKit/templates/Ext/HeaderSuccess.php
+++ b/app/modules/AppKit/templates/Ext/HeaderSuccess.php
@@ -26,120 +26,18 @@ Ext.onReady(function() {
 	
 	// Default ajax timeout
 	Ext.Ajax.timeout = Number(<?php echo AgaviConfig::get('modules.appkit.ajax.timeout', 120000); ?>);
-	
-	var UserMenu = (function() {
+    	
+	(function() {
 	    var pub = {};
 	    var _LA = AppKit.util.Layout;
-	    
-	    var auth = '<?php echo ($auth) ? 'true' : 'false'; ?>';
-		var json = null;
-		
-		try {
-			json=_LA._decodeMenuData((<?php echo $t['json_menu_data']; ?>));
-		}
-		catch(e) {}
-
-		var AppKitNavBar = new Ext.Toolbar({
-			id: 'menu-navigation',
-			items: json['items'] || {},
-			defaults: { border: false },
-			style: 'border: none;',
-			height: 30
-		});
-
-		AppKitNavBar.add([{
-			xtype: 'tbfill'
-		}, {
-            <?php if ($auth === true): ?>
-            menu: {
-                items: {
-                    xtype: 'buttongroup',
-                    columns: 2,
-                    autoWidth: true,
-                    defaults: {
-                        scale: 'large',
-                        iconAlign: 'left',
-                        width: '100%'
-                        
-                    },
-                    items: [{
-                        tooltip: _('Preferences'),
-                        iconCls: 'icinga-icon-user-edit',
-                        text: _('Preferences'),
-                        handler: function() {
-                        	// View nicely in window :-P
-							AppKit.util.doPreferences('<?php echo $ro->gen("my.preferences"); ?>');
-                        }
-                    }, {
-                        tooltip: _('Logout'),
-                        iconCls: 'icinga-icon-user-go',
-                        width: 'auto',
-                        handler: function() {
-							AppKit.util.doLogout('<?php echo $ro->gen("appkit.logout", array('logout' => 1)); ?>');
-                        }
-                    }]
-                }
-            },
-            iconCls: 'icinga-icon-user',
-            <?php else: ?>
-            iconCls: 'icinga-icon-user-delete',
-            <?php endif; ?>
-            text: '<?php echo $username; ?>'
-        }]);
-
-		var earry = _LA.addTo({
-			layout: 'column',
-			id: 'menu',
-			border: false,
-			defaults: { style: { borderLeft: '1px #d0d0d0 solid' }, border: false, height: 30 },
-			items: [{
-				tbar: AppKitNavBar,
-				columnWidth: 1
-			}, {
-				id: 'menu-logo',
-				width: 60,
-				height: 30,
-				border: false,
-				cls: 'icinga-link',
-				items: {
-					width: 61,
-					border: false,
-					autoEl: 'div',
-					frame: false,
-		            cls: 'menu-logo-icon',
-					style: 'background-image: url('+AppKit.c.path + '/images/icinga/idot-small.png);background-repeat:no-repeat;width: 27px;text-align:center; height: 30px; margin-left: 15px;margin-top:0px; display: block;'
-	    		}
-			}]
-		}, null, 'north');
-	
-		Ext.Ajax.on("beforerequest",function() {
-			try {
-				var icon = Ext.DomQuery.selectNode('.menu-logo-icon');
-				if(!icon)
-					return true;
-				Ext.get(icon).setStyle('background-image','url('+AppKit.c.path+'/images/ajax/icinga-throbber.gif)');
-			} catch(e) {
-				// ignore any errors
-			}
-		});
-		Ext.Ajax.on("requestcomplete",function() {
-			try {
-				var icon = Ext.DomQuery.selectNode('.menu-logo-icon');
-				if(!icon)
-					return true;
-				Ext.get(icon).setStyle('background-image','url('+AppKit.c.path+'/images/icinga/idot-small.png)');
-			} catch(e) {
-				// ignore any errors
-			}
-		});
-
-
-		earry.items.get(1).on('render', function(c) {
-			c.getEl().on('click', function() {
-				AppKit.changeLocation('http://www.icinga.org');
-			});
-		});
-	
+	    var navbar = new AppKit.util.AppKitNavBar({
+            logoutURL:      '<?php echo $ro->gen("appkit.logout", array('logout' => 1)); ?>',
+            preferenceURL:  '<?php echo $ro->gen("my.preferences"); ?>',
+            username:       '<?php echo $username; ?>',
+            hasAuth:        <?php echo ($auth == true) ? 'true' : 'false' ?>,
+            menuData:       <?php echo $t['json_menu_data']; ?> 
+        }); 
+        _LA.addTo(navbar,null,'north'); 
 	})();
 	
 });
diff --git a/app/modules/AppKit/views/Ext/HeaderSuccessView.class.php b/app/modules/AppKit/views/Ext/HeaderSuccessView.class.php
index 2dcd01d..592fe6b 100644
--- a/app/modules/AppKit/views/Ext/HeaderSuccessView.class.php
+++ b/app/modules/AppKit/views/Ext/HeaderSuccessView.class.php
@@ -13,12 +13,6 @@ class AppKit_Ext_HeaderSuccessView extends AppKitBaseView {
 
     private function jsonMenuData() {
         $model = $this->getContext()->getModel('NavigationContainer', 'AppKit');
-
-        // Notify the watcher to provide their menu data
-        if ($model->getContainer()->Count() === 0) {
-            AppKitEventDispatcher::getInstance()->triggerSimpleEvent('appkit.menu', 'we need the menu here ...');
-        }
-
         return $model->getJsonData();
     }
 
diff --git a/app/modules/AppKit/views/Widgets/HeaderDataSuccessView.class.php b/app/modules/AppKit/views/Widgets/HeaderDataSuccessView.class.php
index 774428d..4808c25 100755
--- a/app/modules/AppKit/views/Widgets/HeaderDataSuccessView.class.php
+++ b/app/modules/AppKit/views/Widgets/HeaderDataSuccessView.class.php
@@ -7,12 +7,6 @@ class AppKit_Widgets_HeaderDataSuccessView extends AppKitBaseView {
 		$this->setupHtml($rd);
 
 		$this->setAttribute('web_path', AgaviConfig::get('org.icinga.appkit.web_path'));
-
-		AppKitEventDispatcher::getInstance()->triggerSimpleEvent(
-			'appkit.headerdata.publish',
-			'Last change to add some header data',
-			$this->getContext()
-		);
 	}
 	
-}
\ No newline at end of file
+}
diff --git a/app/modules/Cronks/cache/Example/HelloWorld.xml b/app/modules/Cronks/cache/Example/HelloWorld.xml
deleted file mode 100755
index d92d0b0..0000000
--- a/app/modules/Cronks/cache/Example/HelloWorld.xml
+++ /dev/null
@@ -1,7 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<ae:configurations xmlns:ae="http://agavi.org/agavi/config/global/envelope/1.0" xmlns="http://agavi.org/agavi/config/parts/caching/1.0">
-	<ae:configuration>
-		<caching enabled="false">
-		</caching>
-	</ae:configuration>
-</ae:configurations>
diff --git a/app/modules/Cronks/cache/Provider/Categories.xml b/app/modules/Cronks/cache/Provider/Categories.xml
deleted file mode 100755
index d92d0b0..0000000
--- a/app/modules/Cronks/cache/Provider/Categories.xml
+++ /dev/null
@@ -1,7 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<ae:configurations xmlns:ae="http://agavi.org/agavi/config/global/envelope/1.0" xmlns="http://agavi.org/agavi/config/parts/caching/1.0">
-	<ae:configuration>
-		<caching enabled="false">
-		</caching>
-	</ae:configuration>
-</ae:configurations>
diff --git a/app/modules/Cronks/cache/Provider/Combined.xml b/app/modules/Cronks/cache/Provider/Combined.xml
deleted file mode 100755
index d92d0b0..0000000
--- a/app/modules/Cronks/cache/Provider/Combined.xml
+++ /dev/null
@@ -1,7 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<ae:configurations xmlns:ae="http://agavi.org/agavi/config/global/envelope/1.0" xmlns="http://agavi.org/agavi/config/parts/caching/1.0">
-	<ae:configuration>
-		<caching enabled="false">
-		</caching>
-	</ae:configuration>
-</ae:configurations>
diff --git a/app/modules/Cronks/cache/Provider/Cronks.xml b/app/modules/Cronks/cache/Provider/Cronks.xml
deleted file mode 100755
index d92d0b0..0000000
--- a/app/modules/Cronks/cache/Provider/Cronks.xml
+++ /dev/null
@@ -1,7 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<ae:configurations xmlns:ae="http://agavi.org/agavi/config/global/envelope/1.0" xmlns="http://agavi.org/agavi/config/parts/caching/1.0">
-	<ae:configuration>
-		<caching enabled="false">
-		</caching>
-	</ae:configuration>
-</ae:configurations>
diff --git a/app/modules/Cronks/cache/System/CronkListing.xml b/app/modules/Cronks/cache/System/CronkListing.xml
deleted file mode 100755
index b60a7fa..0000000
--- a/app/modules/Cronks/cache/System/CronkListing.xml
+++ /dev/null
@@ -1,7 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<ae:configurations xmlns:ae="http://agavi.org/agavi/config/global/envelope/1.0" xmlns="http://agavi.org/agavi/config/parts/caching/1.0">
-	<ae:configuration>
-		<caching>
-		</caching>
-	</ae:configuration>
-</ae:configurations>
diff --git a/app/modules/Cronks/cache/System/CronkLoader.xml b/app/modules/Cronks/cache/System/CronkLoader.xml
deleted file mode 100755
index b60a7fa..0000000
--- a/app/modules/Cronks/cache/System/CronkLoader.xml
+++ /dev/null
@@ -1,7 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<ae:configurations xmlns:ae="http://agavi.org/agavi/config/global/envelope/1.0" xmlns="http://agavi.org/agavi/config/parts/caching/1.0">
-	<ae:configuration>
-		<caching>
-		</caching>
-	</ae:configuration>
-</ae:configurations>
diff --git a/app/modules/Cronks/cache/System/CronkPortal.xml b/app/modules/Cronks/cache/System/CronkPortal.xml
deleted file mode 100755
index b60a7fa..0000000
--- a/app/modules/Cronks/cache/System/CronkPortal.xml
+++ /dev/null
@@ -1,7 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<ae:configurations xmlns:ae="http://agavi.org/agavi/config/global/envelope/1.0" xmlns="http://agavi.org/agavi/config/parts/caching/1.0">
-	<ae:configuration>
-		<caching>
-		</caching>
-	</ae:configuration>
-</ae:configurations>
diff --git a/app/modules/Cronks/cache/System/IframeView.xml b/app/modules/Cronks/cache/System/IframeView.xml
deleted file mode 100755
index b60a7fa..0000000
--- a/app/modules/Cronks/cache/System/IframeView.xml
+++ /dev/null
@@ -1,7 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<ae:configurations xmlns:ae="http://agavi.org/agavi/config/global/envelope/1.0" xmlns="http://agavi.org/agavi/config/parts/caching/1.0">
-	<ae:configuration>
-		<caching>
-		</caching>
-	</ae:configuration>
-</ae:configurations>
diff --git a/app/modules/Cronks/cache/System/MonitorPerformance.xml b/app/modules/Cronks/cache/System/MonitorPerformance.xml
deleted file mode 100644
index d92d0b0..0000000
--- a/app/modules/Cronks/cache/System/MonitorPerformance.xml
+++ /dev/null
@@ -1,7 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<ae:configurations xmlns:ae="http://agavi.org/agavi/config/global/envelope/1.0" xmlns="http://agavi.org/agavi/config/parts/caching/1.0">
-	<ae:configuration>
-		<caching enabled="false">
-		</caching>
-	</ae:configuration>
-</ae:configurations>
diff --git a/app/modules/Cronks/cache/System/ObjectSearch.xml b/app/modules/Cronks/cache/System/ObjectSearch.xml
deleted file mode 100755
index b60a7fa..0000000
--- a/app/modules/Cronks/cache/System/ObjectSearch.xml
+++ /dev/null
@@ -1,7 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<ae:configurations xmlns:ae="http://agavi.org/agavi/config/global/envelope/1.0" xmlns="http://agavi.org/agavi/config/parts/caching/1.0">
-	<ae:configuration>
-		<caching>
-		</caching>
-	</ae:configuration>
-</ae:configurations>
diff --git a/app/modules/Cronks/cache/System/PortalHello.xml b/app/modules/Cronks/cache/System/PortalHello.xml
deleted file mode 100755
index b60a7fa..0000000
--- a/app/modules/Cronks/cache/System/PortalHello.xml
+++ /dev/null
@@ -1,7 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<ae:configurations xmlns:ae="http://agavi.org/agavi/config/global/envelope/1.0" xmlns="http://agavi.org/agavi/config/parts/caching/1.0">
-	<ae:configuration>
-		<caching>
-		</caching>
-	</ae:configuration>
-</ae:configurations>
diff --git a/app/modules/Cronks/cache/System/PortalView.xml b/app/modules/Cronks/cache/System/PortalView.xml
deleted file mode 100755
index b60a7fa..0000000
--- a/app/modules/Cronks/cache/System/PortalView.xml
+++ /dev/null
@@ -1,7 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<ae:configurations xmlns:ae="http://agavi.org/agavi/config/global/envelope/1.0" xmlns="http://agavi.org/agavi/config/parts/caching/1.0">
-	<ae:configuration>
-		<caching>
-		</caching>
-	</ae:configuration>
-</ae:configurations>
diff --git a/app/modules/Cronks/cache/System/StaticContent.xml b/app/modules/Cronks/cache/System/StaticContent.xml
deleted file mode 100755
index b60a7fa..0000000
--- a/app/modules/Cronks/cache/System/StaticContent.xml
+++ /dev/null
@@ -1,7 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<ae:configurations xmlns:ae="http://agavi.org/agavi/config/global/envelope/1.0" xmlns="http://agavi.org/agavi/config/parts/caching/1.0">
-	<ae:configuration>
-		<caching>
-		</caching>
-	</ae:configuration>
-</ae:configurations>
diff --git a/app/modules/Cronks/cache/System/StatusMap.xml b/app/modules/Cronks/cache/System/StatusMap.xml
deleted file mode 100755
index b60a7fa..0000000
--- a/app/modules/Cronks/cache/System/StatusMap.xml
+++ /dev/null
@@ -1,7 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<ae:configurations xmlns:ae="http://agavi.org/agavi/config/global/envelope/1.0" xmlns="http://agavi.org/agavi/config/parts/caching/1.0">
-	<ae:configuration>
-		<caching>
-		</caching>
-	</ae:configuration>
-</ae:configurations>
diff --git a/app/modules/Cronks/cache/System/StatusOverall.xml b/app/modules/Cronks/cache/System/StatusOverall.xml
deleted file mode 100644
index d92d0b0..0000000
--- a/app/modules/Cronks/cache/System/StatusOverall.xml
+++ /dev/null
@@ -1,7 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<ae:configurations xmlns:ae="http://agavi.org/agavi/config/global/envelope/1.0" xmlns="http://agavi.org/agavi/config/parts/caching/1.0">
-	<ae:configuration>
-		<caching enabled="false">
-		</caching>
-	</ae:configuration>
-</ae:configurations>
diff --git a/app/modules/Cronks/cache/System/ViewProc.xml b/app/modules/Cronks/cache/System/ViewProc.xml
deleted file mode 100755
index b60a7fa..0000000
--- a/app/modules/Cronks/cache/System/ViewProc.xml
+++ /dev/null
@@ -1,7 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<ae:configurations xmlns:ae="http://agavi.org/agavi/config/global/envelope/1.0" xmlns="http://agavi.org/agavi/config/parts/caching/1.0">
-	<ae:configuration>
-		<caching>
-		</caching>
-	</ae:configuration>
-</ae:configurations>
diff --git a/app/modules/Cronks/cache/System/ViewProc/AjaxGridLayout.xml b/app/modules/Cronks/cache/System/ViewProc/AjaxGridLayout.xml
deleted file mode 100755
index b60a7fa..0000000
--- a/app/modules/Cronks/cache/System/ViewProc/AjaxGridLayout.xml
+++ /dev/null
@@ -1,7 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<ae:configurations xmlns:ae="http://agavi.org/agavi/config/global/envelope/1.0" xmlns="http://agavi.org/agavi/config/parts/caching/1.0">
-	<ae:configuration>
-		<caching>
-		</caching>
-	</ae:configuration>
-</ae:configurations>
diff --git a/app/modules/Cronks/cache/System/ViewProc/CommandMetaInformation.xml b/app/modules/Cronks/cache/System/ViewProc/CommandMetaInformation.xml
deleted file mode 100755
index b60a7fa..0000000
--- a/app/modules/Cronks/cache/System/ViewProc/CommandMetaInformation.xml
+++ /dev/null
@@ -1,7 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<ae:configurations xmlns:ae="http://agavi.org/agavi/config/global/envelope/1.0" xmlns="http://agavi.org/agavi/config/parts/caching/1.0">
-	<ae:configuration>
-		<caching>
-		</caching>
-	</ae:configuration>
-</ae:configurations>
diff --git a/app/modules/Cronks/cache/System/ViewProc/MetaInformation.xml b/app/modules/Cronks/cache/System/ViewProc/MetaInformation.xml
deleted file mode 100755
index b60a7fa..0000000
--- a/app/modules/Cronks/cache/System/ViewProc/MetaInformation.xml
+++ /dev/null
@@ -1,7 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<ae:configurations xmlns:ae="http://agavi.org/agavi/config/global/envelope/1.0" xmlns="http://agavi.org/agavi/config/parts/caching/1.0">
-	<ae:configuration>
-		<caching>
-		</caching>
-	</ae:configuration>
-</ae:configurations>
diff --git a/app/modules/Cronks/cache/System/ViewProc/SendCommand.xml b/app/modules/Cronks/cache/System/ViewProc/SendCommand.xml
deleted file mode 100755
index b60a7fa..0000000
--- a/app/modules/Cronks/cache/System/ViewProc/SendCommand.xml
+++ /dev/null
@@ -1,7 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<ae:configurations xmlns:ae="http://agavi.org/agavi/config/global/envelope/1.0" xmlns="http://agavi.org/agavi/config/parts/caching/1.0">
-	<ae:configuration>
-		<caching>
-		</caching>
-	</ae:configuration>
-</ae:configurations>
diff --git a/app/modules/Reporting/config/autoload.xml b/app/modules/Reporting/config/autoload.xml
old mode 100644
new mode 100755
diff --git a/app/modules/Reporting/config/config_handlers.xml b/app/modules/Reporting/config/config_handlers.xml
old mode 100644
new mode 100755
diff --git a/app/modules/Reporting/config/validators.xml b/app/modules/Reporting/config/validators.xml
old mode 100644
new mode 100755
diff --git a/build.properties b/build.properties
index ce3c86e..e40028d 100755
--- a/build.properties
+++ b/build.properties
@@ -1,5 +1,4 @@
 # Automatically-updated properties file generated by the Agavi write-properties task
 project.name=icinga-web
-project.prefix=Icinga
 template.extension.default=php
 templates.directory=${agavi.directory.src.build.templates}
diff --git a/lib/agavi/src/core/Agavi.class.php b/lib/agavi/src/core/Agavi.class.php
index a676700..6843ead 100644
--- a/lib/agavi/src/core/Agavi.class.php
+++ b/lib/agavi/src/core/Agavi.class.php
@@ -121,6 +121,7 @@ final class Agavi
 			AgaviConfig::set('core.environment', $environment, true, true);
 
 			AgaviConfig::set('core.debug', false, false);
+			AgaviConfig::set('core.debug', true, false);
 
 			if(!AgaviConfig::has('core.app_dir')) {
 				throw new AgaviException('Configuration directive "core.app_dir" not defined, terminating...');
@@ -167,4 +168,4 @@ final class Agavi
 	}
 }
 
-?>
\ No newline at end of file
+?>
diff --git a/lib/agavi/src/storage/AgaviSessionStorage.class.php b/lib/agavi/src/storage/AgaviSessionStorage.class.php
index 8a2c3e6..4c1d7c4 100644
--- a/lib/agavi/src/storage/AgaviSessionStorage.class.php
+++ b/lib/agavi/src/storage/AgaviSessionStorage.class.php
@@ -212,4 +212,4 @@ class AgaviSessionStorage extends AgaviStorage
 	}
 }
 
-?>
\ No newline at end of file
+?>
diff --git a/pub/api/api.js b/pub/api/api.js
index 03e9265..d572916 100755
--- a/pub/api/api.js
+++ b/pub/api/api.js
@@ -1,4 +1,4 @@
-Ext.ns('Icinga.ServerStore');
+Ext.ns('Icinga.Api');
 
-Ext.ns('Icinga.ServerStore.Api')['ApiDataStoreProvider'] = {"fields":{"type":"fields","allowedFields":{"Host id":"host_id","Instance":"i.instance_name","Icon":"icon_image","Host name":"display_name","Status":"hs.current_state","Output":"hs.output","Long output":"hs.long_output","Perfdata":"hs.perfdata","Last check":"hs.status_update_time","Has been checked":"hs.has_been_checked","Should be checked":"hs.should_be_checked","Current check attempt":"hs.current_check_attempt","Last state change":"hs.last_state_change","Last hard state change":"hs.last_hard_state_change","Last hard state":"hs.last_hard_state","Last time up":"hs.last_time_up","Last time down":"hs.last_time_down","Last time unreachable":"hs.last_time_unreachable","Notifications on":"notifications_enabled","Acknowledged":"hs.problem_has_been_acknowledged","Acknowledge type":"hs.acknowledgment_type","Alias":"alias","IPv4 Address":"address","IPv6 Address":"address6","Check command":"chco.command_line","Check args":"check_command_args","Check interval":"check_interval","Retry Interval":"retry_interval","Max check attempts":"max_check_attempts","Notes url":"notes_url","Notes":"notes","Action url":"action_url","Freshness checks on":"freshness_checks_enabled","Passive checks on":"passive_checks_enabled","Event handler on":"active_checks_enabled","Flap detection on":"flap_detection_enabled","Service name":"s.display_name","Service status":"ss.current_state","Service output":"ss.output","Service long output":"ss.long_output","Service last check":"ss.status_update_time"},"params":{"target":{"argument":"target","type":"String"},"joins":{"argument":"joins","type":"AppKitJsonValidator"},"fields":{"argument":"fields","type":"String"}}},"filter":{"type":"filter","allowedFilter":[{"type":"Group","types":{"and":"AND","or":"OR"}},{"type":"atom","filters":[]}],"params":{"filter":{"argument":"filter_json","type":"AppKitJsonValidator"}}},"pagination":{"type":"pagination","params":{"offset":{"argument":"offset","type":"Number"},"limit":{"argument":"limit","type":"Number","min":"0","max":"100"}}},"sort":{"type":"sort","params":{"sortfield":{"argument":"sortfield","type":"String"},"dir":{"argument":"dir","type":"String"}}},"module":"Api","action":"ApiDataStoreProvider"}
+Ext.ns('Icinga.Api')['Api_ApiDataStoreProvider'] = {"Hosts":{"fields":{"type":"fields","allowedFields":{"Icon":"icon_image","Host id":"host_id","Instance":"i.instance_name","Host name":"display_name","Status":"hs.current_state","Output":"hs.output","Long output":"hs.long_output","Perfdata":"hs.perfdata","Last check":"hs.status_update_time","Has been checked":"hs.has_been_checked","Should be checked":"hs.should_be_checked","Current check attempt":"hs.current_check_attempt","Last state change":"hs.last_state_change","Last hard state change":"hs.last_hard_state_change","Last hard state":"hs.last_hard_state","Last time up":"hs.last_time_up","Last time down":"hs.last_time_down","Last time unreachable":"hs.last_time_unreachable","Notifications on":"notifications_enabled","Acknowledged":"hs.problem_has_been_acknowledged","Acknowledge type":"hs.acknowledgment_type","Alias":"alias","IPv4 Address":"address","IPv6 Address":"address6","Check command":"chco.command_line","Check args":"check_command_args","Check interval":"check_interval","Retry Interval":"retry_interval","Max check attempts":"max_check_attempts","Notes url":"notes_url","Notes":"notes","Action url":"action_url","Freshness checks on":"freshness_checks_enabled","Passive checks on":"passive_checks_enabled","Event handler on":"active_checks_enabled","Flap detection on":"flap_detection_enabled","Service name":"s.display_name","Service status":"ss.current_state","Service output":"ss.output","Service long output":"ss.long_output","Service last check":"ss.status_update_time"},"defaultFields":["icon_image","host_id","display_name","hs.current_state","hs.output","hs.long_output","hs.perfdata","hs.status_update_time"],"sortFields":["host_id","display_name","hs.current_state","hs_status_update_time"],"groupFields":[],"params":{"target":"target","fields":"fields"}},"filter":{"type":"filter","allowedFilter":[{"type":"group","types":{"and":"AND","or":"OR"}},{"type":"atom","filter":[{"displayName":"Hostname","name":"display_name","operators":{"is exact":"=","is not":"!=","is like":"LIKE","is not like":"NOT LIKE"},"values":[{"target":"host","column":"HOST_NAME","filter":["ANY"]}]},{"displayName":"Status","name":"hs.current_state","operators":{"is exact":"=","is not":"!=","is like":"LIKE","is not like":"NOT LIKE"},"values":["Up","Down","Unreachable"]},{"displayName":"Contains service","name":"s.display_name","operators":{"is exact":"=","is not":"!=","is like":"LIKE","is not like":"NOT LIKE"},"values":[{"target":"service","column":"SERVICE_NAME","filter":["ANY"]}]}]}],"params":{"filter":"filter_json"}},"pagination":{"type":"pagination","params":{"offset":"offset","limit":"limit"}},"sort":{"type":"sort","params":{"sortfield":"sortfield","dir":"dir"}}},"Services":{"fields":{"type":"fields","allowedFields":{"Icon":"icon_image","Host id":"host_id","Instance":"i.instance_name","Host name":"display_name","Status":"hs.current_state","Output":"hs.output","Long output":"hs.long_output","Perfdata":"hs.perfdata","Last check":"hs.status_update_time","Has been checked":"hs.has_been_checked","Should be checked":"hs.should_be_checked","Current check attempt":"hs.current_check_attempt","Last state change":"hs.last_state_change","Last hard state change":"hs.last_hard_state_change","Last hard state":"hs.last_hard_state","Last time up":"hs.last_time_up","Last time down":"hs.last_time_down","Last time unreachable":"hs.last_time_unreachable","Notifications on":"notifications_enabled","Acknowledged":"hs.problem_has_been_acknowledged","Acknowledge type":"hs.acknowledgment_type","Alias":"alias","IPv4 Address":"address","IPv6 Address":"address6","Check command":"chco.command_line","Check args":"check_command_args","Check interval":"check_interval","Retry Interval":"retry_interval","Max check attempts":"max_check_attempts","Notes url":"notes_url","Notes":"notes","Action url":"action_url","Freshness checks on":"freshness_checks_enabled","Passive checks on":"passive_checks_enabled","Event handler on":"active_checks_enabled","Flap detection on":"flap_detection_enabled","Service name":"s.display_name","Service status":"ss.current_state","Service output":"ss.output","Service long output":"ss.long_output","Service last check":"ss.status_update_time"},"defaultFields":["icon_image","host_id","display_name","hs.current_state","hs.output","hs.long_output","hs.perfdata","hs.status_update_time"],"sortFields":["host_id","display_name","hs.current_state","hs_status_update_time"],"groupFields":[],"params":{"target":"target","fields":"fields"}},"filter":{"type":"filter","allowedFilter":[{"type":"group","types":{"and":"AND","or":"OR"}},{"type":"atom","filter":[{"displayName":"Hostname","name":"display_name","operators":{"is exact":"=","is not":"!=","is like":"LIKE","is not like":"NOT LIKE"},"values":[{"target":"host","column":"HOST_NAME","filter":["ANY"]}]},{"displayName":"Status","name":"hs.current_state","operators":{"is exact":"=","is not":"!=","is like":"LIKE","is not like":"NOT LIKE"},"values":["Up","Down","Unreachable"]},{"displayName":"Contains service","name":"s.display_name","operators":{"is exact":"=","is not":"!=","is like":"LIKE","is not like":"NOT LIKE"},"values":[{"target":"service","column":"SERVICE_NAME","filter":["ANY"]}]}]}],"params":{"filter":"filter_json"}},"pagination":{"type":"pagination","params":{"offset":"offset","limit":"limit"}},"sort":{"type":"sort","params":{"sortfield":"sortfield","dir":"dir"}}},"module":"Api","action":"ApiDataStoreProvider"}
 
diff --git a/pub/styles/icinga.css b/pub/styles/icinga.css
index 0b57463..360ca32 100644
--- a/pub/styles/icinga.css
+++ b/pub/styles/icinga.css
@@ -85,6 +85,17 @@ dd {
 	-webkit-border-radius: 5px;
 }
 
+.menu-logo-icon {
+    background-image: url('../images/icinga/idot-small.png);
+    background-repeat:no-repeat;
+    width: 27px;
+    text-align:center; 
+    height: 30px; 
+    margin-left: 15px;
+    margin-top:0px; 
+    display: block;
+}
+
 /** Message colors **/
 
 .icinga-message-success {
@@ -573,6 +584,7 @@ div#menu {
 .static-content-container {
 	/* background-color: #ffffff; */
 	padding: 2px 5px 2px 5px;
+    
 }
 
 .static-content-container table td {
diff --git a/tests/phpunit/TestInit.php b/tests/phpunit/TestInit.php
index b6a2fec..8492e02 100644
--- a/tests/phpunit/TestInit.php
+++ b/tests/phpunit/TestInit.php
@@ -160,10 +160,10 @@ class IcingaWebTestBootstrap {
     	$init_modules = AgaviConfig::get('org.icinga.appkit.init_modules', array());
     	$init_modules = array_merge($init_modules, $modules);
     	AgaviConfig::set('org.icinga.appkit.init_modules', $init_modules, true);
-    	
+    	AgaviToolkit::clearCache();
     	AppKitAgaviUtil::initializeModule('AppKit');
     	AppKitAgaviUtil::initializeModule('Api');
-    	
+        	
     	AgaviConfig::set('core.context_implementation', 'AppKitAgaviContext');
     	
     	return AgaviContext::getInstance($env);
@@ -178,13 +178,13 @@ IcingaWebTestTool::setContext(IcingaWebTestBootstrap::bootstrapAgavi(
 ));
 
 function info($str) {
-	//print("\x1b[2;34m".$str."\x1b[m");
+	print("\x1b[2;34m".$str."\x1b[m");
 }
 function success($str) {
-	//print("\x1b[2;32m".$str."\x1b[m");
+	print("\x1b[2;32m".$str."\x1b[m");
 }
 function error($str) {
-	//print("\x1b[2;31m".$str."\x1b[m");
+	print("\x1b[2;31m".$str."\x1b[m");
 }
 
 function stdin($prompt = "", $args = array(),$default=null) {
diff --git a/tests/phpunit/runSuite.sh b/tests/phpunit/runSuite.sh
index 3be17cd..6786765 100755
--- a/tests/phpunit/runSuite.sh
+++ b/tests/phpunit/runSuite.sh
@@ -12,7 +12,7 @@ function del_cache {
 
 	if [ -d $CACHE_DIR/content ]; then
 		echo -n "Deleting content cache ... "
-		rm -rf $CACHE_DIR/content
+    	rm -rf $CACHE_DIR/content
 		echo "OK"
 	fi
 }
@@ -24,7 +24,7 @@ echo ""
 
 if [ -x ${PHPUNIT} ]; then
 	cd $BASE
-	${PHPUNIT} --configuration=suites.xml $@
+	${PHPUNIT} --verbose --configuration=suites.xml $@
 else
 	echo "Sorry, PHPUnit not found."
 fi
diff --git a/tests/phpunit/suites.xml b/tests/phpunit/suites.xml
index 9abac3d..0ab80f1 100755
--- a/tests/phpunit/suites.xml
+++ b/tests/phpunit/suites.xml
@@ -8,31 +8,34 @@
 		<testsuite name="Bootstrap" >
 			<file>tests/bootstrap/agaviBootstrapTest.php</file>
 		</testsuite>
-		<testsuite name="Installation">
+		<!--<testsuite name="Installation">
 			<file>tests/installation/userRightsTest.php</file>
 			<file>tests/installation/configSettingsTest.php</file>	
 		</testsuite>
 		<testsuite name="Module">
 			<file>tests/module/ModuleLoadingTest.php</file>
-		</testsuite>
-		<testsuite name="Configuration">
+		</testsuite>-->
+		<testsuite name="AppKit">
+            <directory>tests/appkit/</directory>
+        </testsuite>
+    <!--    <testsuite name="Configuration">
 			<file>tests/configuration/ApiProviderRoutesTest.php</file>
 			<file>tests/configuration/ApiValidationParserTest.php</file>
 		</testsuite>
 		<testsuite name="validators">
 			<file>tests/validators/AppKitJsonValidatorTest.php</file>
 	        </testsuite>
-<!--        <testsuite name="Database">
+        <testsuite name="Database">
 			<file>tests/configDatabase/icingaDatabaseAccessibleTest.php</file>
 			<file>tests/configDatabase/icingaUserOperations.php</file>
 			<file>tests/configDatabase/icingaRoleOperations.php</file>
 			<file>tests/configDatabase/persistenceView.php</file>
 		</testsuite>
--->
+
 		<testsuite name="Interface">
 			<file>tests/interface/availabilityTest.php</file>
 		</testsuite>
-<!--
+-
 		<testsuite name="API">
 			<file>tests/api/ConsoleInterfaceTest.php</file>
 			<directory>tests/api/hosts</directory>
@@ -41,13 +44,13 @@
 			<directory>tests/api/servicegroups</directory>
 			<directory>tests/api/misc</directory>
 		</testsuite>
--->	
+	
         <testsuite name="ApiProvider">
             <file>tests/api/apiprovider/FilterTest.php</file>
             <file>tests/api/apiprovider/DataStoreTest.php</file>
             <file>tests/api/apiprovider/IcingaApiDatastoreTest.php</file>
             
         </testsuite>
-
+-->
 	</testsuites>
 </phpunit>
