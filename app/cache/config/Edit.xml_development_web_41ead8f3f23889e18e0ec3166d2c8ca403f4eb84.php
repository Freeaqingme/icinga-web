<?php

// This is a compiled Agavi configuration file
// Compiled from: /data/mhein/workspace-icinga/icinga-web/app/modules/AppKit/validate/Admin/Users/Edit.xml
// Generated by: AgaviValidatorConfigHandler
// Date: 2009-04-20T08:20:47+0000

if($method == 'read') {
${'_validator_user_id'} = new AgaviRegexValidator();
${'_validator_user_id'}->initialize($this->getContext(), array (
  'match' => true,
  'severity' => 'error',
  'required' => false,
  'class' => 'regex',
  'name' => 'user_id',
  'pattern' => '@^\\d+|new$@',
), array (
  0 => 'id',
), array (
));
${'validationManager'}->addChild(${'_validator_user_id'});
}
if($method == 'write') {
${'_validator_user_id'} = new AgaviRegexValidator();
${'_validator_user_id'}->initialize($this->getContext(), array (
  'match' => true,
  'severity' => 'error',
  'required' => false,
  'class' => 'regex',
  'name' => 'user_id',
  'pattern' => '@^\\d+|new$@',
), array (
  0 => 'id',
), array (
));
${'validationManager'}->addChild(${'_validator_user_id'});
${'_validator_userroles'} = new AgaviNumberValidator();
${'_validator_userroles'}->initialize($this->getContext(), array (
  'type' => 'int',
  'severity' => 'error',
  'required' => false,
  'class' => 'number',
  'name' => 'userroles',
  'base' => 'userroles[]',
), array (
  0 => '',
), array (
));
${'validationManager'}->addChild(${'_validator_userroles'});
${'_validator_user_name'} = new AgaviStringValidator();
${'_validator_user_name'}->initialize($this->getContext(), array (
  'min' => '3',
  'severity' => 'error',
  'required' => true,
  'class' => 'string',
  'name' => 'user_name',
  'max' => '18',
), array (
  0 => 'user_name',
), array (
  'min' => 'The username you supplied is fewer than 3 characters long.',
  'max' => 'Your username is too long',
  '' => 'You have to supply a username!',
));
${'validationManager'}->addChild(${'_validator_user_name'});
${'_validator_user_firstname'} = new AgaviStringValidator();
${'_validator_user_firstname'}->initialize($this->getContext(), array (
  'min' => '3',
  'severity' => 'error',
  'required' => true,
  'class' => 'string',
  'name' => 'user_firstname',
  'max' => '40',
), array (
  0 => 'user_firstname',
), array (
  'min' => 'The firstname you supplied is fewer than 3 characters long.',
  'max' => 'Your firstname is too long',
  '' => 'You have to supply a firstname!',
));
${'validationManager'}->addChild(${'_validator_user_firstname'});
${'_validator_user_lastname'} = new AgaviStringValidator();
${'_validator_user_lastname'}->initialize($this->getContext(), array (
  'min' => '3',
  'severity' => 'error',
  'required' => true,
  'class' => 'string',
  'name' => 'user_lastname',
  'max' => '40',
), array (
  0 => 'user_lastname',
), array (
  'min' => 'The lastname you supplied is fewer than 3 characters long.',
  'max' => 'Your lastname is too long',
  '' => 'You have to supply a lastname!',
));
${'validationManager'}->addChild(${'_validator_user_lastname'});
${'_validator_user_email'} = new AgaviEmailValidator();
${'_validator_user_email'}->initialize($this->getContext(), array (
  'severity' => 'error',
  'required' => true,
  'class' => 'email',
  'name' => 'user_email',
), array (
  0 => 'user_email',
), array (
  '' => 'You have to supply a valid email address!',
));
${'validationManager'}->addChild(${'_validator_user_email'});
${'_validator_49ec305fdd7e90.47082726'} = new AgaviOroperatorValidator();
${'_validator_49ec305fdd7e90.47082726'}->initialize($this->getContext(), array (
  'break' => true,
  'severity' => 'error',
  'required' => true,
  'class' => 'or',
  'name' => '49ec305fdd7e90.47082726',
), array (
), array (
));
${'validationManager'}->addChild(${'_validator_49ec305fdd7e90.47082726'});
${'_validator_49ec305fdda941.61326094'} = new AgaviNumberValidator();
${'_validator_49ec305fdda941.61326094'}->initialize($this->getContext(), array (
  'type' => 'int',
  'severity' => 'error',
  'required' => false,
  'class' => 'number',
  'name' => '49ec305fdda941.61326094',
), array (
  0 => 'user_disabled',
), array (
));
${'_validator_49ec305fdd7e90.47082726'}->addChild(${'_validator_49ec305fdda941.61326094'});
${'_validator_49ec305fddd5a5.66948220'} = new AgaviSetValidator();
${'_validator_49ec305fddd5a5.66948220'}->initialize($this->getContext(), array (
  'severity' => 'error',
  'required' => false,
  'class' => 'set',
  'name' => '49ec305fddd5a5.66948220',
  'export' => 'user_disabled',
  'value' => '0',
), array (
), array (
));
${'_validator_49ec305fdd7e90.47082726'}->addChild(${'_validator_49ec305fddd5a5.66948220'});
${'_validator_password'} = new AgaviStringValidator();
${'_validator_password'}->initialize($this->getContext(), array (
  'min' => '6',
  'severity' => 'error',
  'required' => false,
  'class' => 'string',
  'name' => 'password',
  'provides' => 'password',
  'max' => '20',
), array (
  0 => 'password',
), array (
  'min' => 'The password you supplied is fewer than 6 characters long.',
  'max' => 'Your password is too long',
  '' => 'You have to supply a password!',
));
${'validationManager'}->addChild(${'_validator_password'});
${'_validator_49ec305fde6243.91272374'} = new AgaviAndoperatorValidator();
${'_validator_49ec305fde6243.91272374'}->initialize($this->getContext(), array (
  'break' => true,
  'severity' => 'error',
  'required' => true,
  'class' => 'and',
  'depends' => 'password',
  'name' => '49ec305fde6243.91272374',
), array (
), array (
));
${'validationManager'}->addChild(${'_validator_49ec305fde6243.91272374'});
${'_validator_password_validate'} = new AgaviStringValidator();
${'_validator_password_validate'}->initialize($this->getContext(), array (
  'min' => '6',
  'severity' => 'error',
  'required' => true,
  'class' => 'string',
  'name' => 'password_validate',
  'max' => '20',
), array (
  0 => 'password_validate',
), array (
  'min' => 'The password you supplied is fewer than 6 characters long.',
  'max' => 'Your password is too long',
  '' => 'You have to supply a password validate string!',
));
${'_validator_49ec305fde6243.91272374'}->addChild(${'_validator_password_validate'});
${'_validator_password_equals'} = new AgaviEqualsValidator();
${'_validator_password_equals'}->initialize($this->getContext(), array (
  'severity' => 'error',
  'required' => true,
  'class' => 'equals',
  'name' => 'password_equals',
  'value' => 'password',
  'asparam' => true,
), array (
  0 => 'password_validate',
), array (
  '' => 'Password and the validate string did not match!',
));
${'_validator_49ec305fde6243.91272374'}->addChild(${'_validator_password_equals'});
}

?>