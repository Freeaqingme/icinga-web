SHELL=/bin/sh
PACKAGE_TARNAME=@PACKAGE_TARNAME@
PACKAGE_NAME=@PACKAGE_NAME@
PACKAGE_VERSION=@PACKAGE_VERSION@
TAR_DIR_NAME=$(shell basename `pwd`)
prefix=@prefix@
exec_prefix=@exec_prefix@
LOGDIR=@localstatedir@
CFGDIR=@sysconfdir@
BINDIR=@bindir@
CGIDIR=@sbindir@
HTMLDIR=@datarootdir@
INSTALL=@INSTALL@
INSTALL_OPTS=@INSTALL_OPTS@
BIN_USER=@bin_user@
BIN_GROUP=@bin_group@
WEB_USER=@web_user@
WEB_GROUP=@web_group@
SED=@SED@
PHP=@PHP@
PRINTF=@PRINTF@
PC=bin/phing -f etc/build.xml
API_DIR=@icinga_api@
INC_MAKE_FILES=./etc/make/files.mk

none:
#	@$(PRINTF) "\t%15s - %s\n" "" ""
	@$(PRINTF) "Please supply a command line argument (i.e. 'make install').\n\n"
	@$(PRINTF) "Generic targets: install, clean\n\n"
	@$(PRINTF) "Other usefull targets:\n"
	@$(PRINTF) "\t%18s - %s\n" "testdeps" "test php dependencies"
	@$(PRINTF) "\t%18s - %s\n" "create-tarball" "creates a tarball for packaging"
	@$(PRINTF) "\t%18s - %s\n" "devclean" "make source ready for commit or packaging"
	@$(PRINTF) "\t%18s - %s\n" "cacheclean" "purges the agavi xml cache"
	
	@$(PRINTF) "\nDatabase (web) targets:\n"
	@$(PRINTF) "\t%18s - %s\n" "db-initialize" "create the db"
	@$(PRINTF) "\t%18s - %s\n" "db-deinitialize" "reverse the path (removes all data and drop the relations)"
	@$(PRINTF) "\t%18s - %s\n" "db-upgrade" "tries to upgrade from a available db revision"
	@$(PRINTF) "\t%18s - %s\n" "db-drop" "drop the entire db"
	@$(PRINTF) "\t%18s - %s\n" "db-purge-userprefs" "purge existing user preferences"

	@$(PRINTF) "\nI18n targets:\n"
	@$(PRINTF) "\t%18s - %s\n" "loc-update-catalog" "Create a initial locale from source (default.po)"
	@$(PRINTF) "\t%18s - %s\n" "loc-create-mo" "Compile all po files"
	@$(PRINTF) "\t%18s - %s\n" "loc-create-json" "Create json gettext from po"

	@$(PRINTF) "\n\n"
	
include $(INC_MAKE_FILES)

install-files-list:
	$(SED) -i '/^# INSTALL_FILES_BEGIN/,/^# INSTALL_FILES_END/{D}' $(INC_MAKE_FILES)
	./bin/create-makefile.sh >> $(INC_MAKE_FILES)

remove-temp-files:
	./bin/rabbit.sh
	
clean:

distclean: clean
	rm -f \
		Makefile \
		config.log \
		config.status \
		etc/build.properties
		
configclean:
	rm -f \
		app/config/databases.xml

devclean: remove-temp-files distclean cacheclean install-files-list configclean

create-tarball:
	tar -czf ../$(PACKAGE_TARNAME)-$(PACKAGE_VERSION).tar.gz ../$(TAR_DIR_NAME)

cacheclean:
	rm -rf app/cache/config/*.php

testdeps:
	 $(PHP) bin/testdeps.php

fix-priv:
	chown -R $(WEB_USER).$(WEB_GROUP) $(DESTDIR)$(prefix)/app/cache
	chmod -R 775 $(DESTDIR)$(prefix)/app/cache
	chmod +x \
		$(DESTDIR)$(prefix)/bin/agavi \
		$(DESTDIR)$(prefix)/bin/create-makefile.sh \
		$(DESTDIR)$(prefix)/bin/doctrinemodels.php \
		$(DESTDIR)$(prefix)/bin/phing \
		$(DESTDIR)$(prefix)/bin/rabbit.sh \
		$(DESTDIR)$(prefix)/bin/testdeps.php

fix-libs:
	rm -rf $(DESTDIR)$(prefix)/pub/js/ext3
	ln -sf $(DESTDIR)$(prefix)/lib/ext3 $(DESTDIR)$(prefix)/pub/js
	ln -sf $(API_DIR) $(DESTDIR)$(prefix)/lib/icinga-api

install: inc-install-files fix-priv fix-libs

db-initialize:
	$(PC) db-initialize

db-deinitialize:
	$(PC) db-initialize

db-drop:
	$(PC) db-drop

db-upgrade:
	$(PC) db-upgrade

db-purge-userprefs:
	$(PC) db-purge-userprefs

loc-update-catalog:
	./bin/loc-create-catalog.pl --base=./ --out=./res/i18n/po/default.pot
	$(bash for I in ./res/i18n/po/*.po; do msgmerge -U default.pot $I; done)
	

loc-create-mo:
	./bin/loc-create-mo.sh res/i18n/po res/i18n/mo

loc-create-json:
	./bin/loc-create-json.sh res/i18n/po res/i18n/mo

